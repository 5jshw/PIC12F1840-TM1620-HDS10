

Microchip MPLAB XC8 Assembler V2.45 build 20230818022343 
                                                                                               Tue Dec 12 17:26:02 2023

Microchip MPLAB XC8 C Compiler v2.45 (Free license) build 20230818022343 Og1 
     1                           	processor	12F1840
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	stringtext1,global,class=STRCODE,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	clrtext,global,class=CODE,delta=2
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2
    12                           	psect	text2,local,class=CODE,merge=1,delta=2
    13                           	psect	text3,local,class=CODE,merge=1,delta=2
    14                           	psect	text4,local,class=CODE,merge=1,delta=2
    15                           	psect	text5,local,class=CODE,merge=1,delta=2
    16                           	psect	text6,local,class=CODE,merge=1,delta=2
    17                           	psect	text7,local,class=CODE,merge=1,delta=2,group=1
    18                           	psect	text8,local,class=CODE,merge=1,delta=2
    19                           	psect	text9,local,class=CODE,merge=1,delta=2
    20                           	psect	text10,local,class=CODE,merge=1,delta=2,group=1
    21                           	psect	intentry,global,class=CODE,delta=2
    22                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    23                           	dabs	1,0x7E,2
    24     0000                     
    25                           ; Generated 07/09/2023 GMT
    26                           ; 
    27                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    28                           ; All rights reserved.
    29                           ; 
    30                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    31                           ; 
    32                           ; Redistribution and use in source and binary forms, with or without modification, are
    33                           ; permitted provided that the following conditions are met:
    34                           ; 
    35                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    36                           ;        conditions and the following disclaimer.
    37                           ; 
    38                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    39                           ;        of conditions and the following disclaimer in the documentation and/or other
    40                           ;        materials provided with the distribution. Publication is not required when
    41                           ;        this file is used in an embedded application.
    42                           ; 
    43                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    44                           ;        software without specific prior written permission.
    45                           ; 
    46                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    47                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    48                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    49                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    50                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    51                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    52                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    53                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    54                           ; 
    55                           ; 
    56                           ; Code-generator required, PIC12F1840 Definitions
    57                           ; 
    58                           ; SFR Addresses
    59     0000                     	;# 
    60     0001                     	;# 
    61     0002                     	;# 
    62     0003                     	;# 
    63     0004                     	;# 
    64     0005                     	;# 
    65     0006                     	;# 
    66     0007                     	;# 
    67     0008                     	;# 
    68     0009                     	;# 
    69     000A                     	;# 
    70     000B                     	;# 
    71     000C                     	;# 
    72     0011                     	;# 
    73     0012                     	;# 
    74     0015                     	;# 
    75     0016                     	;# 
    76     0016                     	;# 
    77     0017                     	;# 
    78     0018                     	;# 
    79     0019                     	;# 
    80     001A                     	;# 
    81     001B                     	;# 
    82     001C                     	;# 
    83     001E                     	;# 
    84     001F                     	;# 
    85     008C                     	;# 
    86     0091                     	;# 
    87     0092                     	;# 
    88     0095                     	;# 
    89     0096                     	;# 
    90     0097                     	;# 
    91     0098                     	;# 
    92     0099                     	;# 
    93     009A                     	;# 
    94     009B                     	;# 
    95     009B                     	;# 
    96     009C                     	;# 
    97     009D                     	;# 
    98     009E                     	;# 
    99     010C                     	;# 
   100     0111                     	;# 
   101     0112                     	;# 
   102     0115                     	;# 
   103     0116                     	;# 
   104     0117                     	;# 
   105     0118                     	;# 
   106     0119                     	;# 
   107     011A                     	;# 
   108     011B                     	;# 
   109     011D                     	;# 
   110     011D                     	;# 
   111     018C                     	;# 
   112     0191                     	;# 
   113     0191                     	;# 
   114     0192                     	;# 
   115     0193                     	;# 
   116     0193                     	;# 
   117     0193                     	;# 
   118     0194                     	;# 
   119     0195                     	;# 
   120     0196                     	;# 
   121     0197                     	;# 
   122     0199                     	;# 
   123     019A                     	;# 
   124     019B                     	;# 
   125     019B                     	;# 
   126     019B                     	;# 
   127     019B                     	;# 
   128     019C                     	;# 
   129     019C                     	;# 
   130     019D                     	;# 
   131     019E                     	;# 
   132     019F                     	;# 
   133     020C                     	;# 
   134     0211                     	;# 
   135     0211                     	;# 
   136     0212                     	;# 
   137     0212                     	;# 
   138     0213                     	;# 
   139     0213                     	;# 
   140     0214                     	;# 
   141     0214                     	;# 
   142     0215                     	;# 
   143     0215                     	;# 
   144     0215                     	;# 
   145     0216                     	;# 
   146     0216                     	;# 
   147     0217                     	;# 
   148     0217                     	;# 
   149     0291                     	;# 
   150     0291                     	;# 
   151     0292                     	;# 
   152     0293                     	;# 
   153     0294                     	;# 
   154     0295                     	;# 
   155     0295                     	;# 
   156     0296                     	;# 
   157     0391                     	;# 
   158     0392                     	;# 
   159     0393                     	;# 
   160     039A                     	;# 
   161     039C                     	;# 
   162     039D                     	;# 
   163     039E                     	;# 
   164     039F                     	;# 
   165     0FE4                     	;# 
   166     0FE5                     	;# 
   167     0FE6                     	;# 
   168     0FE7                     	;# 
   169     0FE8                     	;# 
   170     0FE9                     	;# 
   171     0FEA                     	;# 
   172     0FEB                     	;# 
   173     0FED                     	;# 
   174     0FEE                     	;# 
   175     0FEF                     	;# 
   176     0000                     	;# 
   177     0001                     	;# 
   178     0002                     	;# 
   179     0003                     	;# 
   180     0004                     	;# 
   181     0005                     	;# 
   182     0006                     	;# 
   183     0007                     	;# 
   184     0008                     	;# 
   185     0009                     	;# 
   186     000A                     	;# 
   187     000B                     	;# 
   188     000C                     	;# 
   189     0011                     	;# 
   190     0012                     	;# 
   191     0015                     	;# 
   192     0016                     	;# 
   193     0016                     	;# 
   194     0017                     	;# 
   195     0018                     	;# 
   196     0019                     	;# 
   197     001A                     	;# 
   198     001B                     	;# 
   199     001C                     	;# 
   200     001E                     	;# 
   201     001F                     	;# 
   202     008C                     	;# 
   203     0091                     	;# 
   204     0092                     	;# 
   205     0095                     	;# 
   206     0096                     	;# 
   207     0097                     	;# 
   208     0098                     	;# 
   209     0099                     	;# 
   210     009A                     	;# 
   211     009B                     	;# 
   212     009B                     	;# 
   213     009C                     	;# 
   214     009D                     	;# 
   215     009E                     	;# 
   216     010C                     	;# 
   217     0111                     	;# 
   218     0112                     	;# 
   219     0115                     	;# 
   220     0116                     	;# 
   221     0117                     	;# 
   222     0118                     	;# 
   223     0119                     	;# 
   224     011A                     	;# 
   225     011B                     	;# 
   226     011D                     	;# 
   227     011D                     	;# 
   228     018C                     	;# 
   229     0191                     	;# 
   230     0191                     	;# 
   231     0192                     	;# 
   232     0193                     	;# 
   233     0193                     	;# 
   234     0193                     	;# 
   235     0194                     	;# 
   236     0195                     	;# 
   237     0196                     	;# 
   238     0197                     	;# 
   239     0199                     	;# 
   240     019A                     	;# 
   241     019B                     	;# 
   242     019B                     	;# 
   243     019B                     	;# 
   244     019B                     	;# 
   245     019C                     	;# 
   246     019C                     	;# 
   247     019D                     	;# 
   248     019E                     	;# 
   249     019F                     	;# 
   250     020C                     	;# 
   251     0211                     	;# 
   252     0211                     	;# 
   253     0212                     	;# 
   254     0212                     	;# 
   255     0213                     	;# 
   256     0213                     	;# 
   257     0214                     	;# 
   258     0214                     	;# 
   259     0215                     	;# 
   260     0215                     	;# 
   261     0215                     	;# 
   262     0216                     	;# 
   263     0216                     	;# 
   264     0217                     	;# 
   265     0217                     	;# 
   266     0291                     	;# 
   267     0291                     	;# 
   268     0292                     	;# 
   269     0293                     	;# 
   270     0294                     	;# 
   271     0295                     	;# 
   272     0295                     	;# 
   273     0296                     	;# 
   274     0391                     	;# 
   275     0392                     	;# 
   276     0393                     	;# 
   277     039A                     	;# 
   278     039C                     	;# 
   279     039D                     	;# 
   280     039E                     	;# 
   281     039F                     	;# 
   282     0FE4                     	;# 
   283     0FE5                     	;# 
   284     0FE6                     	;# 
   285     0FE7                     	;# 
   286     0FE8                     	;# 
   287     0FE9                     	;# 
   288     0FEA                     	;# 
   289     0FEB                     	;# 
   290     0FED                     	;# 
   291     0FEE                     	;# 
   292     0FEF                     	;# 
   293     0000                     	;# 
   294     0001                     	;# 
   295     0002                     	;# 
   296     0003                     	;# 
   297     0004                     	;# 
   298     0005                     	;# 
   299     0006                     	;# 
   300     0007                     	;# 
   301     0008                     	;# 
   302     0009                     	;# 
   303     000A                     	;# 
   304     000B                     	;# 
   305     000C                     	;# 
   306     0011                     	;# 
   307     0012                     	;# 
   308     0015                     	;# 
   309     0016                     	;# 
   310     0016                     	;# 
   311     0017                     	;# 
   312     0018                     	;# 
   313     0019                     	;# 
   314     001A                     	;# 
   315     001B                     	;# 
   316     001C                     	;# 
   317     001E                     	;# 
   318     001F                     	;# 
   319     008C                     	;# 
   320     0091                     	;# 
   321     0092                     	;# 
   322     0095                     	;# 
   323     0096                     	;# 
   324     0097                     	;# 
   325     0098                     	;# 
   326     0099                     	;# 
   327     009A                     	;# 
   328     009B                     	;# 
   329     009B                     	;# 
   330     009C                     	;# 
   331     009D                     	;# 
   332     009E                     	;# 
   333     010C                     	;# 
   334     0111                     	;# 
   335     0112                     	;# 
   336     0115                     	;# 
   337     0116                     	;# 
   338     0117                     	;# 
   339     0118                     	;# 
   340     0119                     	;# 
   341     011A                     	;# 
   342     011B                     	;# 
   343     011D                     	;# 
   344     011D                     	;# 
   345     018C                     	;# 
   346     0191                     	;# 
   347     0191                     	;# 
   348     0192                     	;# 
   349     0193                     	;# 
   350     0193                     	;# 
   351     0193                     	;# 
   352     0194                     	;# 
   353     0195                     	;# 
   354     0196                     	;# 
   355     0197                     	;# 
   356     0199                     	;# 
   357     019A                     	;# 
   358     019B                     	;# 
   359     019B                     	;# 
   360     019B                     	;# 
   361     019B                     	;# 
   362     019C                     	;# 
   363     019C                     	;# 
   364     019D                     	;# 
   365     019E                     	;# 
   366     019F                     	;# 
   367     020C                     	;# 
   368     0211                     	;# 
   369     0211                     	;# 
   370     0212                     	;# 
   371     0212                     	;# 
   372     0213                     	;# 
   373     0213                     	;# 
   374     0214                     	;# 
   375     0214                     	;# 
   376     0215                     	;# 
   377     0215                     	;# 
   378     0215                     	;# 
   379     0216                     	;# 
   380     0216                     	;# 
   381     0217                     	;# 
   382     0217                     	;# 
   383     0291                     	;# 
   384     0291                     	;# 
   385     0292                     	;# 
   386     0293                     	;# 
   387     0294                     	;# 
   388     0295                     	;# 
   389     0295                     	;# 
   390     0296                     	;# 
   391     0391                     	;# 
   392     0392                     	;# 
   393     0393                     	;# 
   394     039A                     	;# 
   395     039C                     	;# 
   396     039D                     	;# 
   397     039E                     	;# 
   398     039F                     	;# 
   399     0FE4                     	;# 
   400     0FE5                     	;# 
   401     0FE6                     	;# 
   402     0FE7                     	;# 
   403     0FE8                     	;# 
   404     0FE9                     	;# 
   405     0FEA                     	;# 
   406     0FEB                     	;# 
   407     0FED                     	;# 
   408     0FEE                     	;# 
   409     0FEF                     	;# 
   410                           
   411                           	psect	stringtext1
   412     0258                     __pstringtext1:
   413     0258                     _CODE:
   414     0258  343F               	retlw	63
   415     0259  3406               	retlw	6
   416     025A  345B               	retlw	91
   417     025B  344F               	retlw	79
   418     025C  3466               	retlw	102
   419     025D  346D               	retlw	109
   420     025E  347D               	retlw	125
   421     025F  3407               	retlw	7
   422     0260  347F               	retlw	127
   423     0261  346F               	retlw	111
   424     0262                     __end_of_CODE:
   425     000B                     _INTCONbits	set	11
   426     0011                     _PIR1bits	set	17
   427     009E                     _ADCON1	set	158
   428     0099                     _OSCCON	set	153
   429     008C                     _TRISAbits	set	140
   430     0091                     _PIE1bits	set	145
   431     009B                     _ADRESL	set	155
   432     009C                     _ADRESH	set	156
   433     009D                     _ADCON0bits	set	157
   434     010C                     _LATAbits	set	268
   435     018C                     _ANSELAbits	set	396
   436                           
   437                           	psect	cinit
   438     0015                     start_initialization:	
   439                           ; #config settings
   440                           
   441     0015                     __initialization:
   442                           
   443                           ; Clear objects allocated to BANK0
   444     0015  3020               	movlw	low __pbssBANK0
   445     0016  0084               	movwf	4
   446     0017  3000               	movlw	high __pbssBANK0
   447     0018  0085               	movwf	5
   448     0019  3015               	movlw	21
   449     001A  3182  2262  3180   	fcall	clear_ram0
   450     001D                     end_of_initialization:	
   451                           ;End of C runtime variable initialization code
   452                           
   453     001D                     __end_of__initialization:
   454     001D  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
   455     001E  0020               	movlb	0
   456     001F  3181  291A         	ljmp	_main	;jump to C main() function
   457                           
   458                           	psect	bssBANK0
   459     0020                     __pbssBANK0:
   460     0020                     _AD:
   461     0020                     	ds	10
   462     002A                     _currentResistance:
   463     002A                     	ds	4
   464     002E                     _ADValue:
   465     002E                     	ds	2
   466     0030                     _ADSValue:
   467     0030                     	ds	1
   468     0031                     _Unit:
   469     0031                     	ds	1
   470     0032                     _Tenth:
   471     0032                     	ds	1
   472     0033                     _Hundredth:
   473     0033                     	ds	1
   474     0034                     _Thousandth:
   475     0034                     	ds	1
   476                           
   477                           	psect	clrtext
   478     0262                     clear_ram0:	
   479                           ;	Called with FSR0 containing the base address, and
   480                           ;	WREG with the size to clear
   481                           
   482     0262  0064               	clrwdt	;clear the watchdog before getting into this loop
   483     0263                     clrloop0:
   484     0263  0180               	clrf	0	;clear RAM location pointed to by FSR
   485     0264  3101               	addfsr 0,1
   486     0265  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
   487     0266  2A63               	goto	clrloop0	;have we reached the end yet?
   488     0267  3400               	retlw	0	;all done for this memory range, return
   489                           
   490                           	psect	cstackCOMMON
   491     0070                     __pcstackCOMMON:
   492     0070                     ?_PIC12F1840_Init:
   493     0070                     ??_PIC12F1840_Init:	
   494                           ; 1 bytes @ 0x0
   495                           
   496     0070                     ?_setup:	
   497                           ; 1 bytes @ 0x0
   498                           
   499     0070                     ??_setup:	
   500                           ; 1 bytes @ 0x0
   501                           
   502     0070                     ?_ADsensing:	
   503                           ; 1 bytes @ 0x0
   504                           
   505     0070                     ?_TM1620_Dis:	
   506                           ; 1 bytes @ 0x0
   507                           
   508     0070                     ?_TM1620Sendata:	
   509                           ; 1 bytes @ 0x0
   510                           
   511     0070                     ??_TM1620Sendata:	
   512                           ; 1 bytes @ 0x0
   513                           
   514     0070                     ?_TM1620Sencmd:	
   515                           ; 1 bytes @ 0x0
   516                           
   517     0070                     ?_main:	
   518                           ; 1 bytes @ 0x0
   519                           
   520     0070                     ?_ISR:	
   521                           ; 1 bytes @ 0x0
   522                           
   523     0070                     ??_ISR:	
   524                           ; 1 bytes @ 0x0
   525                           
   526     0070                     ?_getADCValue:	
   527                           ; 1 bytes @ 0x0
   528                           
   529     0070                     ?___lwmod:	
   530                           ; 2 bytes @ 0x0
   531                           
   532     0070                     ___lwmod@divisor:	
   533                           ; 2 bytes @ 0x0
   534                           
   535                           
   536                           ; 2 bytes @ 0x0
   537     0070                     	ds	2
   538     0072                     ??_getADCValue:
   539     0072                     TM1620Sendata@TM1620Data:	
   540                           ; 1 bytes @ 0x2
   541                           
   542     0072                     ___lwmod@dividend:	
   543                           ; 1 bytes @ 0x2
   544                           
   545                           
   546                           ; 2 bytes @ 0x2
   547     0072                     	ds	1
   548     0073                     TM1620Sendata@i:
   549                           
   550                           ; 1 bytes @ 0x3
   551     0073                     	ds	1
   552     0074                     ??_TM1620Sencmd:
   553     0074                     ??___lwmod:	
   554                           ; 1 bytes @ 0x4
   555                           
   556                           
   557                           ; 1 bytes @ 0x4
   558     0074                     	ds	1
   559     0075                     TM1620Sencmd@com:
   560     0075                     ___lwmod@counter:	
   561                           ; 1 bytes @ 0x5
   562                           
   563                           
   564                           ; 1 bytes @ 0x5
   565     0075                     	ds	1
   566     0076                     ??_TM1620_Dis:
   567     0076                     ?___lwdiv:	
   568                           ; 1 bytes @ 0x6
   569                           
   570     0076                     ___lwdiv@divisor:	
   571                           ; 2 bytes @ 0x6
   572                           
   573                           
   574                           ; 2 bytes @ 0x6
   575     0076                     	ds	2
   576     0078                     ___lwdiv@dividend:
   577                           
   578                           ; 2 bytes @ 0x8
   579     0078                     	ds	1
   580     0079                     getADCValue@channel:
   581                           
   582                           ; 1 bytes @ 0x9
   583     0079                     	ds	1
   584     007A                     ??___lwdiv:
   585                           
   586                           ; 1 bytes @ 0xA
   587     007A                     	ds	1
   588     007B                     ___lwdiv@quotient:
   589                           
   590                           ; 2 bytes @ 0xB
   591     007B                     	ds	2
   592     007D                     ___lwdiv@counter:
   593                           
   594                           ; 1 bytes @ 0xD
   595     007D                     	ds	1
   596     007E                     ??_Numerical_Partitioning:
   597                           
   598                           	psect	cstackBANK0
   599     0035                     __pcstackBANK0:	
   600                           ; 1 bytes @ 0xE
   601                           
   602     0035                     ??_ADsensing:
   603     0035                     ?_Numerical_Partitioning:	
   604                           ; 1 bytes @ 0x0
   605                           
   606     0035                     Numerical_Partitioning@ADCValue:	
   607                           ; 1 bytes @ 0x0
   608                           
   609                           
   610                           ; 2 bytes @ 0x0
   611     0035                     	ds	6
   612     003B                     ??_main:
   613                           
   614                           ; 1 bytes @ 0x6
   615     003B                     	ds	2
   616                           
   617                           	psect	maintext
   618     011A                     __pmaintext:	
   619 ;;
   620 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   621 ;;
   622 ;; *************** function _main *****************
   623 ;; Defined at:
   624 ;;		line 11 in file "main.c"
   625 ;; Parameters:    Size  Location     Type
   626 ;;		None
   627 ;; Auto vars:     Size  Location     Type
   628 ;;		None
   629 ;; Return value:  Size  Location     Type
   630 ;;                  1    wreg      void 
   631 ;; Registers used:
   632 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
   633 ;; Tracked objects:
   634 ;;		On entry : B1F/0
   635 ;;		On exit  : 0/0
   636 ;;		Unchanged: 0/0
   637 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   638 ;;      Params:         0       0       0       0
   639 ;;      Locals:         0       0       0       0
   640 ;;      Temps:          0       2       0       0
   641 ;;      Totals:         0       2       0       0
   642 ;;Total ram usage:        2 bytes
   643 ;; Hardware stack levels required when called: 4
   644 ;; This function calls:
   645 ;;		_ADsensing
   646 ;;		_Numerical_Partitioning
   647 ;;		_PIC12F1840_Init
   648 ;;		_TM1620_Dis
   649 ;;		_setup
   650 ;; This function is called by:
   651 ;;		Startup code after reset
   652 ;; This function uses a non-reentrant model
   653 ;;
   654                           
   655     011A                     _main:	
   656                           ;psect for function _main
   657                           
   658     011A                     l1020:	
   659                           ;incstack = 0
   660                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
   661                           
   662                           
   663                           ;main.c: 13:  PIC12F1840_Init();
   664     011A  3182  224B  3181   	fcall	_PIC12F1840_Init
   665     011D                     l1022:
   666                           
   667                           ;main.c: 14:  setup();
   668     011D  3182  223A  3181   	fcall	_setup
   669                           
   670                           ;main.c: 16:  _delay((unsigned long)((500)*(32000000/4000.0)));
   671     0120  3015               	movlw	21
   672     0121  0020               	movlb	0	; select bank0
   673     0122  00BC               	movwf	??_main+1
   674     0123  304B               	movlw	75
   675     0124  00BB               	movwf	??_main
   676     0125  30BE               	movlw	190
   677     0126                     u387:
   678     0126  0B89               	decfsz	9,f
   679     0127  2926               	goto	u387
   680     0128  0BBB               	decfsz	??_main,f
   681     0129  2926               	goto	u387
   682     012A  0BBC               	decfsz	??_main+1,f
   683     012B  2926               	goto	u387
   684     012C  0000               	nop
   685     012D                     l1024:
   686                           
   687                           ;main.c: 18:  {;main.c: 19:   ADsensing();
   688     012D  3180  20D3  3181   	fcall	_ADsensing
   689     0130                     l1026:
   690                           
   691                           ;main.c: 20:   _delay((unsigned long)((20)*(32000000/4000.0)));
   692     0130  30D0               	movlw	208
   693     0131  0020               	movlb	0	; select bank0
   694     0132  00BB               	movwf	??_main
   695     0133  30C9               	movlw	201
   696     0134                     u397:
   697     0134  0B89               	decfsz	9,f
   698     0135  2934               	goto	u397
   699     0136  0BBB               	decfsz	??_main,f
   700     0137  2934               	goto	u397
   701     0138  3200               	nop2
   702     0139                     l1028:
   703                           
   704                           ;main.c: 21:   Numerical_Partitioning(ADValue);
   705     0139  0020               	movlb	0	; select bank0
   706     013A  082F               	movf	_ADValue+1,w
   707     013B  00B6               	movwf	Numerical_Partitioning@ADCValue+1
   708     013C  082E               	movf	_ADValue,w
   709     013D  00B5               	movwf	Numerical_Partitioning@ADCValue
   710     013E  3180  2083  3181   	fcall	_Numerical_Partitioning
   711     0141                     l1030:
   712                           
   713                           ;main.c: 22:   _delay((unsigned long)((20)*(32000000/4000.0)));
   714     0141  30D0               	movlw	208
   715     0142  0020               	movlb	0	; select bank0
   716     0143  00BB               	movwf	??_main
   717     0144  30C9               	movlw	201
   718     0145                     u407:
   719     0145  0B89               	decfsz	9,f
   720     0146  2945               	goto	u407
   721     0147  0BBB               	decfsz	??_main,f
   722     0148  2945               	goto	u407
   723     0149  3200               	nop2
   724     014A                     l1032:
   725                           
   726                           ;main.c: 23:   TM1620_Dis();
   727     014A  3180  2021  3181   	fcall	_TM1620_Dis
   728     014D                     l1034:
   729                           
   730                           ;main.c: 24:   _delay((unsigned long)((20)*(32000000/4000.0)));
   731     014D  30D0               	movlw	208
   732     014E  0020               	movlb	0	; select bank0
   733     014F  00BB               	movwf	??_main
   734     0150  30C9               	movlw	201
   735     0151                     u417:
   736     0151  0B89               	decfsz	9,f
   737     0152  2951               	goto	u417
   738     0153  0BBB               	decfsz	??_main,f
   739     0154  2951               	goto	u417
   740     0155  3200               	nop2
   741     0156  292D               	goto	l1024
   742     0157  3180  2813         	ljmp	start
   743     0159                     __end_of_main:
   744                           
   745                           	psect	text1
   746     023A                     __ptext1:	
   747 ;; *************** function _setup *****************
   748 ;; Defined at:
   749 ;;		line 14 in file "Dew_Sensor.c"
   750 ;; Parameters:    Size  Location     Type
   751 ;;		None
   752 ;; Auto vars:     Size  Location     Type
   753 ;;		None
   754 ;; Return value:  Size  Location     Type
   755 ;;                  1    wreg      void 
   756 ;; Registers used:
   757 ;;		wreg
   758 ;; Tracked objects:
   759 ;;		On entry : 0/0
   760 ;;		On exit  : 0/0
   761 ;;		Unchanged: 0/0
   762 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   763 ;;      Params:         0       0       0       0
   764 ;;      Locals:         0       0       0       0
   765 ;;      Temps:          0       0       0       0
   766 ;;      Totals:         0       0       0       0
   767 ;;Total ram usage:        0 bytes
   768 ;; Hardware stack levels used: 1
   769 ;; Hardware stack levels required when called: 1
   770 ;; This function calls:
   771 ;;		Nothing
   772 ;; This function is called by:
   773 ;;		_main
   774 ;; This function uses a non-reentrant model
   775 ;;
   776                           
   777     023A                     _setup:	
   778                           ;psect for function _setup
   779                           
   780     023A                     l966:	
   781                           ;incstack = 0
   782                           ; Regs used in _setup: [wreg]
   783                           
   784                           
   785                           ;Dew_Sensor.c: 16:  OSCCON = 0b11110000;
   786     023A  30F0               	movlw	240
   787     023B  0021               	movlb	1	; select bank1
   788     023C  0099               	movwf	25	;volatile
   789     023D                     l968:
   790                           
   791                           ;Dew_Sensor.c: 18:  ANSELAbits.ANSA4 = 1;
   792     023D  0023               	movlb	3	; select bank3
   793     023E  160C               	bsf	12,4	;volatile
   794                           
   795                           ;Dew_Sensor.c: 19:  ADCON1 = 0x50;
   796     023F  3050               	movlw	80
   797     0240  0021               	movlb	1	; select bank1
   798     0241  009E               	movwf	30	;volatile
   799     0242                     l970:
   800                           
   801                           ;Dew_Sensor.c: 20:  INTCONbits.GIE = 1;
   802     0242  178B               	bsf	11,7	;volatile
   803     0243                     l972:
   804                           
   805                           ;Dew_Sensor.c: 21:  INTCONbits.PEIE = 1;
   806     0243  170B               	bsf	11,6	;volatile
   807     0244                     l974:
   808                           
   809                           ;Dew_Sensor.c: 22:  PIE1bits.ADIE = 1;
   810     0244  1711               	bsf	17,6	;volatile
   811     0245                     l976:
   812                           
   813                           ;Dew_Sensor.c: 23:  PIR1bits.ADIF = 0;
   814     0245  0020               	movlb	0	; select bank0
   815     0246  1311               	bcf	17,6	;volatile
   816     0247                     l978:
   817                           
   818                           ;Dew_Sensor.c: 24:  ADCON0bits.GO = 0;
   819     0247  0021               	movlb	1	; select bank1
   820     0248  109D               	bcf	29,1	;volatile
   821     0249                     l980:
   822                           
   823                           ;Dew_Sensor.c: 25:  ADCON0bits.ADON = 1;
   824     0249  141D               	bsf	29,0	;volatile
   825     024A                     l113:
   826     024A  0008               	return
   827     024B                     __end_of_setup:
   828                           
   829                           	psect	text2
   830     0021                     __ptext2:	
   831 ;; *************** function _TM1620_Dis *****************
   832 ;; Defined at:
   833 ;;		line 62 in file "main.c"
   834 ;; Parameters:    Size  Location     Type
   835 ;;		None
   836 ;; Auto vars:     Size  Location     Type
   837 ;;		None
   838 ;; Return value:  Size  Location     Type
   839 ;;                  1    wreg      void 
   840 ;; Registers used:
   841 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   842 ;; Tracked objects:
   843 ;;		On entry : 0/0
   844 ;;		On exit  : 0/0
   845 ;;		Unchanged: 0/0
   846 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   847 ;;      Params:         0       0       0       0
   848 ;;      Locals:         0       0       0       0
   849 ;;      Temps:          1       0       0       0
   850 ;;      Totals:         1       0       0       0
   851 ;;Total ram usage:        1 bytes
   852 ;; Hardware stack levels used: 1
   853 ;; Hardware stack levels required when called: 3
   854 ;; This function calls:
   855 ;;		_TM1620Sencmd
   856 ;;		_TM1620Sendata
   857 ;; This function is called by:
   858 ;;		_main
   859 ;; This function uses a non-reentrant model
   860 ;;
   861                           
   862     0021                     _TM1620_Dis:	
   863                           ;psect for function _TM1620_Dis
   864                           
   865     0021                     l994:	
   866                           ;incstack = 0
   867                           ; Regs used in _TM1620_Dis: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   868                           
   869                           
   870                           ;main.c: 64:     TM1620Sendata(CODE[Thousandth]);
   871     0021  0020               	movlb	0	; select bank0
   872     0022  0834               	movf	_Thousandth,w
   873     0023  3E58               	addlw	low (_CODE| (0+32768))
   874     0024  0084               	movwf	4
   875     0025  3082               	movlw	high (_CODE| (0+32768))
   876     0026  1803               	skipnc
   877     0027  3E01               	addlw	1
   878     0028  0085               	movwf	5
   879     0029  0800               	movf	0,w	;code access
   880     002A  3181  21FC  3180   	fcall	_TM1620Sendata
   881     002D                     l996:
   882                           
   883                           ;main.c: 65:     TM1620Sendata(0x00);
   884     002D  3000               	movlw	0
   885     002E  3181  21FC  3180   	fcall	_TM1620Sendata
   886     0031                     l998:
   887                           
   888                           ;main.c: 66:  TM1620Sendata(CODE[Hundredth]);
   889     0031  0020               	movlb	0	; select bank0
   890     0032  0833               	movf	_Hundredth,w
   891     0033  3E58               	addlw	low (_CODE| (0+32768))
   892     0034  0084               	movwf	4
   893     0035  3082               	movlw	high (_CODE| (0+32768))
   894     0036  1803               	skipnc
   895     0037  3E01               	addlw	1
   896     0038  0085               	movwf	5
   897     0039  0800               	movf	0,w	;code access
   898     003A  3181  21FC  3180   	fcall	_TM1620Sendata
   899                           
   900                           ;main.c: 67:     TM1620Sendata(0x00);
   901     003D  3000               	movlw	0
   902     003E  3181  21FC  3180   	fcall	_TM1620Sendata
   903     0041                     l1000:
   904                           
   905                           ;main.c: 68:  TM1620Sendata(CODE[Tenth]);
   906     0041  0020               	movlb	0	; select bank0
   907     0042  0832               	movf	_Tenth,w
   908     0043  3E58               	addlw	low (_CODE| (0+32768))
   909     0044  0084               	movwf	4
   910     0045  3082               	movlw	high (_CODE| (0+32768))
   911     0046  1803               	skipnc
   912     0047  3E01               	addlw	1
   913     0048  0085               	movwf	5
   914     0049  0800               	movf	0,w	;code access
   915     004A  3181  21FC  3180   	fcall	_TM1620Sendata
   916     004D                     l1002:
   917                           
   918                           ;main.c: 69:     TM1620Sendata(0x00);
   919     004D  3000               	movlw	0
   920     004E  3181  21FC  3180   	fcall	_TM1620Sendata
   921                           
   922                           ;main.c: 70:  TM1620Sendata(CODE[Unit]);
   923     0051  0020               	movlb	0	; select bank0
   924     0052  0831               	movf	_Unit,w
   925     0053  3E58               	addlw	low (_CODE| (0+32768))
   926     0054  0084               	movwf	4
   927     0055  3082               	movlw	high (_CODE| (0+32768))
   928     0056  1803               	skipnc
   929     0057  3E01               	addlw	1
   930     0058  0085               	movwf	5
   931     0059  0800               	movf	0,w	;code access
   932     005A  3181  21FC  3180   	fcall	_TM1620Sendata
   933     005D                     l1004:
   934                           
   935                           ;main.c: 71:     TM1620Sendata(0x00);
   936     005D  3000               	movlw	0
   937     005E  3181  21FC  3180   	fcall	_TM1620Sendata
   938     0061                     l1006:
   939                           
   940                           ;main.c: 72:  _delay((unsigned long)((5)*(32000000/4000.0)));
   941     0061  3034               	movlw	52
   942     0062  00F6               	movwf	??_TM1620_Dis
   943     0063  30F2               	movlw	242
   944     0064                     u427:
   945     0064  0B89               	decfsz	9,f
   946     0065  2864               	goto	u427
   947     0066  0BF6               	decfsz	??_TM1620_Dis,f
   948     0067  2864               	goto	u427
   949     0068                     l1008:
   950                           
   951                           ;main.c: 74:  LATAbits.LATA0 = 1;
   952     0068  0022               	movlb	2	; select bank2
   953     0069  140C               	bsf	12,0	;volatile
   954     006A                     l1010:
   955                           
   956                           ;main.c: 75:  _delay((unsigned long)((1)*(32000000/4000.0)));
   957     006A  300B               	movlw	11
   958     006B  00F6               	movwf	??_TM1620_Dis
   959     006C  3062               	movlw	98
   960     006D                     u437:
   961     006D  0B89               	decfsz	9,f
   962     006E  286D               	goto	u437
   963     006F  0BF6               	decfsz	??_TM1620_Dis,f
   964     0070  286D               	goto	u437
   965     0071  3200               	nop2
   966     0072                     l1012:
   967                           
   968                           ;main.c: 76:  LATAbits.LATA0 = 0;
   969     0072  0022               	movlb	2	; select bank2
   970     0073  100C               	bcf	12,0	;volatile
   971     0074                     l1014:
   972                           
   973                           ;main.c: 77:  _delay((unsigned long)((1)*(32000000/4000.0)));
   974     0074  300B               	movlw	11
   975     0075  00F6               	movwf	??_TM1620_Dis
   976     0076  3062               	movlw	98
   977     0077                     u447:
   978     0077  0B89               	decfsz	9,f
   979     0078  2877               	goto	u447
   980     0079  0BF6               	decfsz	??_TM1620_Dis,f
   981     007A  2877               	goto	u447
   982     007B  3200               	nop2
   983     007C                     l1016:
   984                           
   985                           ;main.c: 78:  TM1620Sencmd(0x8F);
   986     007C  308F               	movlw	143
   987     007D  3182  2220  3180   	fcall	_TM1620Sencmd
   988     0080                     l1018:
   989                           
   990                           ;main.c: 79:  LATAbits.LATA0 = 1;
   991     0080  0022               	movlb	2	; select bank2
   992     0081  140C               	bsf	12,0	;volatile
   993     0082                     l74:
   994     0082  0008               	return
   995     0083                     __end_of_TM1620_Dis:
   996                           
   997                           	psect	text3
   998     0220                     __ptext3:	
   999 ;; *************** function _TM1620Sencmd *****************
  1000 ;; Defined at:
  1001 ;;		line 94 in file "main.c"
  1002 ;; Parameters:    Size  Location     Type
  1003 ;;  com             1    wreg     unsigned char 
  1004 ;; Auto vars:     Size  Location     Type
  1005 ;;  com             1    5[COMMON] unsigned char 
  1006 ;; Return value:  Size  Location     Type
  1007 ;;                  1    wreg      void 
  1008 ;; Registers used:
  1009 ;;		wreg, status,2, status,0, pclath, cstack
  1010 ;; Tracked objects:
  1011 ;;		On entry : 0/0
  1012 ;;		On exit  : 0/0
  1013 ;;		Unchanged: 0/0
  1014 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1015 ;;      Params:         0       0       0       0
  1016 ;;      Locals:         1       0       0       0
  1017 ;;      Temps:          1       0       0       0
  1018 ;;      Totals:         2       0       0       0
  1019 ;;Total ram usage:        2 bytes
  1020 ;; Hardware stack levels used: 1
  1021 ;; Hardware stack levels required when called: 2
  1022 ;; This function calls:
  1023 ;;		_TM1620Sendata
  1024 ;; This function is called by:
  1025 ;;		_TM1620_Dis
  1026 ;;		_TM1620_Init
  1027 ;; This function uses a non-reentrant model
  1028 ;;
  1029                           
  1030     0220                     _TM1620Sencmd:	
  1031                           ;psect for function _TM1620Sencmd
  1032                           
  1033                           
  1034                           ;incstack = 0
  1035                           ; Regs used in _TM1620Sencmd: [wreg+status,2+status,0+pclath+cstack]
  1036                           ;TM1620Sencmd@com stored from wreg
  1037     0220  00F5               	movwf	TM1620Sencmd@com
  1038     0221                     l908:
  1039                           
  1040                           ;main.c: 94: void TM1620Sencmd(char com);main.c: 95:  {;main.c: 96:  LATAbits.LATA0 = 1;
  1041     0221  0022               	movlb	2	; select bank2
  1042     0222  140C               	bsf	12,0	;volatile
  1043     0223                     l910:
  1044                           
  1045                           ;main.c: 97:  _delay((unsigned long)((1)*(32000000/4000.0)));
  1046     0223  300B               	movlw	11
  1047     0224  00F4               	movwf	??_TM1620Sencmd
  1048     0225  3062               	movlw	98
  1049     0226                     u457:
  1050     0226  0B89               	decfsz	9,f
  1051     0227  2A26               	goto	u457
  1052     0228  0BF4               	decfsz	??_TM1620Sencmd,f
  1053     0229  2A26               	goto	u457
  1054     022A  3200               	nop2
  1055     022B                     l912:
  1056                           
  1057                           ;main.c: 98:  LATAbits.LATA0 = 0;
  1058     022B  0022               	movlb	2	; select bank2
  1059     022C  100C               	bcf	12,0	;volatile
  1060                           
  1061                           ;main.c: 99:  _delay((unsigned long)((1)*(32000000/4000.0)));
  1062     022D  300B               	movlw	11
  1063     022E  00F4               	movwf	??_TM1620Sencmd
  1064     022F  3062               	movlw	98
  1065     0230                     u467:
  1066     0230  0B89               	decfsz	9,f
  1067     0231  2A30               	goto	u467
  1068     0232  0BF4               	decfsz	??_TM1620Sencmd,f
  1069     0233  2A30               	goto	u467
  1070     0234  3200               	nop2
  1071     0235                     l914:
  1072                           
  1073                           ;main.c: 100:  TM1620Sendata(com);
  1074     0235  0875               	movf	TM1620Sencmd@com,w
  1075     0236  3181  21FC  3182   	fcall	_TM1620Sendata
  1076     0239                     l82:
  1077     0239  0008               	return
  1078     023A                     __end_of_TM1620Sencmd:
  1079                           
  1080                           	psect	text4
  1081     01FC                     __ptext4:	
  1082 ;; *************** function _TM1620Sendata *****************
  1083 ;; Defined at:
  1084 ;;		line 82 in file "main.c"
  1085 ;; Parameters:    Size  Location     Type
  1086 ;;  TM1620Data      1    wreg     unsigned char 
  1087 ;; Auto vars:     Size  Location     Type
  1088 ;;  TM1620Data      1    2[COMMON] unsigned char 
  1089 ;;  i               1    3[COMMON] unsigned char 
  1090 ;; Return value:  Size  Location     Type
  1091 ;;                  1    wreg      void 
  1092 ;; Registers used:
  1093 ;;		wreg, status,2, status,0
  1094 ;; Tracked objects:
  1095 ;;		On entry : 0/0
  1096 ;;		On exit  : 0/0
  1097 ;;		Unchanged: 0/0
  1098 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1099 ;;      Params:         0       0       0       0
  1100 ;;      Locals:         2       0       0       0
  1101 ;;      Temps:          2       0       0       0
  1102 ;;      Totals:         4       0       0       0
  1103 ;;Total ram usage:        4 bytes
  1104 ;; Hardware stack levels used: 1
  1105 ;; Hardware stack levels required when called: 1
  1106 ;; This function calls:
  1107 ;;		Nothing
  1108 ;; This function is called by:
  1109 ;;		_TM1620_Dis
  1110 ;;		_TM1620Sencmd
  1111 ;; This function uses a non-reentrant model
  1112 ;;
  1113                           
  1114     01FC                     _TM1620Sendata:	
  1115                           ;psect for function _TM1620Sendata
  1116                           
  1117                           
  1118                           ;incstack = 0
  1119                           ; Regs used in _TM1620Sendata: [wreg+status,2+status,0]
  1120                           ;TM1620Sendata@TM1620Data stored from wreg
  1121     01FC  00F2               	movwf	TM1620Sendata@TM1620Data
  1122     01FD                     l884:
  1123                           
  1124                           ;main.c: 82: void TM1620Sendata(char TM1620Data);main.c: 83: {;main.c: 84:  char i;;main
      +                          .c: 85:  for(i = 0; i < 8; i++)
  1125     01FD  01F3               	clrf	TM1620Sendata@i
  1126     01FE                     l77:
  1127                           
  1128                           ;main.c: 86:  {;main.c: 87:   LATAbits.LATA1 = 0;
  1129     01FE  0022               	movlb	2	; select bank2
  1130     01FF  108C               	bcf	12,1	;volatile
  1131     0200                     l890:
  1132                           
  1133                           ;main.c: 88:   LATAbits.LATA2 = 1 & (TM1620Data >> i);
  1134     0200  0872               	movf	TM1620Sendata@TM1620Data,w
  1135     0201  00F0               	movwf	??_TM1620Sendata
  1136     0202  0A73               	incf	TM1620Sendata@i,w
  1137     0203  2A05               	goto	u204
  1138     0204                     u205:
  1139     0204  36F0               	lsrf	??_TM1620Sendata,f
  1140     0205                     u204:
  1141     0205  0B89               	decfsz	9,f
  1142     0206  2A04               	goto	u205
  1143     0207  0870               	movf	??_TM1620Sendata,w
  1144     0208  3901               	andlw	1
  1145     0209  00F1               	movwf	??_TM1620Sendata+1
  1146     020A  0DF1               	rlf	??_TM1620Sendata+1,f
  1147     020B  0DF1               	rlf	??_TM1620Sendata+1,f
  1148     020C  080C               	movf	12,w	;volatile
  1149     020D  0671               	xorwf	??_TM1620Sendata+1,w
  1150     020E  39FB               	andlw	-5
  1151     020F  0671               	xorwf	??_TM1620Sendata+1,w
  1152     0210  008C               	movwf	12	;volatile
  1153     0211                     l892:
  1154                           
  1155                           ;main.c: 89:   LATAbits.LATA1 = 1;
  1156     0211  148C               	bsf	12,1	;volatile
  1157     0212                     l894:
  1158                           
  1159                           ;main.c: 90:   _delay((unsigned long)((3)*(32000000/4000000.0)));
  1160     0212  3008               	movlw	8
  1161     0213                     u477:
  1162     0213  0B89               	decfsz	9,f
  1163     0214  2A13               	goto	u477
  1164     0215                     l896:
  1165                           
  1166                           ;main.c: 91:  }
  1167     0215  3001               	movlw	1
  1168     0216  00F0               	movwf	??_TM1620Sendata
  1169     0217  0870               	movf	??_TM1620Sendata,w
  1170     0218  07F3               	addwf	TM1620Sendata@i,f
  1171     0219  3008               	movlw	8
  1172     021A  0273               	subwf	TM1620Sendata@i,w
  1173     021B  1C03               	skipc
  1174     021C  2A1E               	goto	u211
  1175     021D  2A1F               	goto	u210
  1176     021E                     u211:
  1177     021E  29FE               	goto	l77
  1178     021F                     u210:
  1179     021F                     l79:
  1180     021F  0008               	return
  1181     0220                     __end_of_TM1620Sendata:
  1182                           
  1183                           	psect	text5
  1184     024B                     __ptext5:	
  1185 ;; *************** function _PIC12F1840_Init *****************
  1186 ;; Defined at:
  1187 ;;		line 4 in file "Dew_Sensor.c"
  1188 ;; Parameters:    Size  Location     Type
  1189 ;;		None
  1190 ;; Auto vars:     Size  Location     Type
  1191 ;;		None
  1192 ;; Return value:  Size  Location     Type
  1193 ;;                  1    wreg      void 
  1194 ;; Registers used:
  1195 ;;		None
  1196 ;; Tracked objects:
  1197 ;;		On entry : 0/0
  1198 ;;		On exit  : 0/0
  1199 ;;		Unchanged: 0/0
  1200 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1201 ;;      Params:         0       0       0       0
  1202 ;;      Locals:         0       0       0       0
  1203 ;;      Temps:          0       0       0       0
  1204 ;;      Totals:         0       0       0       0
  1205 ;;Total ram usage:        0 bytes
  1206 ;; Hardware stack levels used: 1
  1207 ;; Hardware stack levels required when called: 1
  1208 ;; This function calls:
  1209 ;;		Nothing
  1210 ;; This function is called by:
  1211 ;;		_main
  1212 ;; This function uses a non-reentrant model
  1213 ;;
  1214                           
  1215     024B                     _PIC12F1840_Init:	
  1216                           ;psect for function _PIC12F1840_Init
  1217                           
  1218     024B                     l964:	
  1219                           ;incstack = 0
  1220                           ; Regs used in _PIC12F1840_Init: []
  1221                           
  1222                           
  1223                           ;Dew_Sensor.c: 6:  LATAbits.LATA0 = 1;
  1224     024B  0022               	movlb	2	; select bank2
  1225     024C  140C               	bsf	12,0	;volatile
  1226                           
  1227                           ;Dew_Sensor.c: 7:  TRISAbits.TRISA0 = 0;
  1228     024D  0021               	movlb	1	; select bank1
  1229     024E  100C               	bcf	12,0	;volatile
  1230                           
  1231                           ;Dew_Sensor.c: 8:  LATAbits.LATA1 = 1;
  1232     024F  0022               	movlb	2	; select bank2
  1233     0250  148C               	bsf	12,1	;volatile
  1234                           
  1235                           ;Dew_Sensor.c: 9:  TRISAbits.TRISA1 = 0;
  1236     0251  0021               	movlb	1	; select bank1
  1237     0252  108C               	bcf	12,1	;volatile
  1238                           
  1239                           ;Dew_Sensor.c: 10:  LATAbits.LATA2 = 1;
  1240     0253  0022               	movlb	2	; select bank2
  1241     0254  150C               	bsf	12,2	;volatile
  1242                           
  1243                           ;Dew_Sensor.c: 11:  TRISAbits.TRISA2 = 0;
  1244     0255  0021               	movlb	1	; select bank1
  1245     0256  110C               	bcf	12,2	;volatile
  1246     0257                     l110:
  1247     0257  0008               	return
  1248     0258                     __end_of_PIC12F1840_Init:
  1249                           
  1250                           	psect	text6
  1251     0083                     __ptext6:	
  1252 ;; *************** function _Numerical_Partitioning *****************
  1253 ;; Defined at:
  1254 ;;		line 103 in file "main.c"
  1255 ;; Parameters:    Size  Location     Type
  1256 ;;  ADCValue        2    0[BANK0 ] unsigned int 
  1257 ;; Auto vars:     Size  Location     Type
  1258 ;;		None
  1259 ;; Return value:  Size  Location     Type
  1260 ;;                  1    wreg      void 
  1261 ;; Registers used:
  1262 ;;		wreg, status,2, status,0, pclath, cstack
  1263 ;; Tracked objects:
  1264 ;;		On entry : 0/0
  1265 ;;		On exit  : 0/0
  1266 ;;		Unchanged: 0/0
  1267 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1268 ;;      Params:         0       2       0       0
  1269 ;;      Locals:         0       0       0       0
  1270 ;;      Temps:          0       0       0       0
  1271 ;;      Totals:         0       2       0       0
  1272 ;;Total ram usage:        2 bytes
  1273 ;; Hardware stack levels used: 1
  1274 ;; Hardware stack levels required when called: 2
  1275 ;; This function calls:
  1276 ;;		___lwdiv
  1277 ;;		___lwmod
  1278 ;; This function is called by:
  1279 ;;		_main
  1280 ;; This function uses a non-reentrant model
  1281 ;;
  1282                           
  1283     0083                     _Numerical_Partitioning:	
  1284                           ;psect for function _Numerical_Partitioning
  1285                           
  1286     0083                     l992:	
  1287                           ;incstack = 0
  1288                           ; Regs used in _Numerical_Partitioning: [wreg+status,2+status,0+pclath+cstack]
  1289                           
  1290                           
  1291                           ;main.c: 103: void Numerical_Partitioning(unsigned int ADCValue);main.c: 104: {;main.c: 
      +                          105:  Thousandth = ADCValue / 1000;
  1292     0083  30E8               	movlw	232
  1293     0084  00F6               	movwf	___lwdiv@divisor
  1294     0085  3003               	movlw	3
  1295     0086  00F7               	movwf	___lwdiv@divisor+1
  1296     0087  0020               	movlb	0	; select bank0
  1297     0088  0836               	movf	Numerical_Partitioning@ADCValue+1,w
  1298     0089  00F9               	movwf	___lwdiv@dividend+1
  1299     008A  0835               	movf	Numerical_Partitioning@ADCValue,w
  1300     008B  00F8               	movwf	___lwdiv@dividend
  1301     008C  3181  2159  3180   	fcall	___lwdiv
  1302     008F  0876               	movf	?___lwdiv,w
  1303     0090  0020               	movlb	0	; select bank0
  1304     0091  00B4               	movwf	_Thousandth
  1305                           
  1306                           ;main.c: 106:  Hundredth = ADCValue % 1000 / 100;
  1307     0092  3064               	movlw	100
  1308     0093  00F6               	movwf	___lwdiv@divisor
  1309     0094  3000               	movlw	0
  1310     0095  00F7               	movwf	___lwdiv@divisor+1
  1311     0096  0836               	movf	Numerical_Partitioning@ADCValue+1,w
  1312     0097  00F3               	movwf	___lwmod@dividend+1
  1313     0098  0835               	movf	Numerical_Partitioning@ADCValue,w
  1314     0099  00F2               	movwf	___lwmod@dividend
  1315     009A  30E8               	movlw	232
  1316     009B  00F0               	movwf	___lwmod@divisor
  1317     009C  3003               	movlw	3
  1318     009D  00F1               	movwf	___lwmod@divisor+1
  1319     009E  3181  2195  3180   	fcall	___lwmod
  1320     00A1  0871               	movf	?___lwmod+1,w
  1321     00A2  00F9               	movwf	___lwdiv@dividend+1
  1322     00A3  0870               	movf	?___lwmod,w
  1323     00A4  00F8               	movwf	___lwdiv@dividend
  1324     00A5  3181  2159  3180   	fcall	___lwdiv
  1325     00A8  0876               	movf	?___lwdiv,w
  1326     00A9  0020               	movlb	0	; select bank0
  1327     00AA  00B3               	movwf	_Hundredth
  1328                           
  1329                           ;main.c: 107:  Tenth = ADCValue % 100 / 10;
  1330     00AB  300A               	movlw	10
  1331     00AC  00F6               	movwf	___lwdiv@divisor
  1332     00AD  3000               	movlw	0
  1333     00AE  00F7               	movwf	___lwdiv@divisor+1
  1334     00AF  0836               	movf	Numerical_Partitioning@ADCValue+1,w
  1335     00B0  00F3               	movwf	___lwmod@dividend+1
  1336     00B1  0835               	movf	Numerical_Partitioning@ADCValue,w
  1337     00B2  00F2               	movwf	___lwmod@dividend
  1338     00B3  3064               	movlw	100
  1339     00B4  00F0               	movwf	___lwmod@divisor
  1340     00B5  3000               	movlw	0
  1341     00B6  00F1               	movwf	___lwmod@divisor+1
  1342     00B7  3181  2195  3180   	fcall	___lwmod
  1343     00BA  0871               	movf	?___lwmod+1,w
  1344     00BB  00F9               	movwf	___lwdiv@dividend+1
  1345     00BC  0870               	movf	?___lwmod,w
  1346     00BD  00F8               	movwf	___lwdiv@dividend
  1347     00BE  3181  2159  3180   	fcall	___lwdiv
  1348     00C1  0876               	movf	?___lwdiv,w
  1349     00C2  0020               	movlb	0	; select bank0
  1350     00C3  00B2               	movwf	_Tenth
  1351                           
  1352                           ;main.c: 108:  Unit = ADCValue % 10;
  1353     00C4  300A               	movlw	10
  1354     00C5  00F0               	movwf	___lwmod@divisor
  1355     00C6  3000               	movlw	0
  1356     00C7  00F1               	movwf	___lwmod@divisor+1
  1357     00C8  0836               	movf	Numerical_Partitioning@ADCValue+1,w
  1358     00C9  00F3               	movwf	___lwmod@dividend+1
  1359     00CA  0835               	movf	Numerical_Partitioning@ADCValue,w
  1360     00CB  00F2               	movwf	___lwmod@dividend
  1361     00CC  3181  2195  3180   	fcall	___lwmod
  1362     00CF  0870               	movf	?___lwmod,w
  1363     00D0  0020               	movlb	0	; select bank0
  1364     00D1  00B1               	movwf	_Unit
  1365     00D2                     l85:
  1366     00D2  0008               	return
  1367     00D3                     __end_of_Numerical_Partitioning:
  1368                           
  1369                           	psect	text7
  1370     0195                     __ptext7:	
  1371 ;; *************** function ___lwmod *****************
  1372 ;; Defined at:
  1373 ;;		line 5 in file "C:\XC8\pic\sources\c99\common\lwmod.c"
  1374 ;; Parameters:    Size  Location     Type
  1375 ;;  divisor         2    0[COMMON] unsigned int 
  1376 ;;  dividend        2    2[COMMON] unsigned int 
  1377 ;; Auto vars:     Size  Location     Type
  1378 ;;  counter         1    5[COMMON] unsigned char 
  1379 ;; Return value:  Size  Location     Type
  1380 ;;                  2    0[COMMON] unsigned int 
  1381 ;; Registers used:
  1382 ;;		wreg, status,2, status,0
  1383 ;; Tracked objects:
  1384 ;;		On entry : 0/0
  1385 ;;		On exit  : 0/0
  1386 ;;		Unchanged: 0/0
  1387 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1388 ;;      Params:         4       0       0       0
  1389 ;;      Locals:         1       0       0       0
  1390 ;;      Temps:          1       0       0       0
  1391 ;;      Totals:         6       0       0       0
  1392 ;;Total ram usage:        6 bytes
  1393 ;; Hardware stack levels used: 1
  1394 ;; Hardware stack levels required when called: 1
  1395 ;; This function calls:
  1396 ;;		Nothing
  1397 ;; This function is called by:
  1398 ;;		_Numerical_Partitioning
  1399 ;; This function uses a non-reentrant model
  1400 ;;
  1401                           
  1402     0195                     ___lwmod:	
  1403                           ;psect for function ___lwmod
  1404                           
  1405     0195                     l942:	
  1406                           ;incstack = 0
  1407                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  1408                           
  1409     0195  0870               	movf	___lwmod@divisor,w
  1410     0196  0471               	iorwf	___lwmod@divisor+1,w
  1411     0197  1903               	btfsc	3,2
  1412     0198  299A               	goto	u311
  1413     0199  299B               	goto	u310
  1414     019A                     u311:
  1415     019A  29C4               	goto	l960
  1416     019B                     u310:
  1417     019B                     l944:
  1418     019B  01F5               	clrf	___lwmod@counter
  1419     019C  0AF5               	incf	___lwmod@counter,f
  1420     019D  29A7               	goto	l950
  1421     019E                     l946:
  1422     019E  3001               	movlw	1
  1423     019F                     u325:
  1424     019F  35F0               	lslf	___lwmod@divisor,f
  1425     01A0  0DF1               	rlf	___lwmod@divisor+1,f
  1426     01A1  0B89               	decfsz	9,f
  1427     01A2  299F               	goto	u325
  1428     01A3                     l948:
  1429     01A3  3001               	movlw	1
  1430     01A4  00F4               	movwf	??___lwmod
  1431     01A5  0874               	movf	??___lwmod,w
  1432     01A6  07F5               	addwf	___lwmod@counter,f
  1433     01A7                     l950:
  1434     01A7  1FF1               	btfss	___lwmod@divisor+1,7
  1435     01A8  29AA               	goto	u331
  1436     01A9  29AB               	goto	u330
  1437     01AA                     u331:
  1438     01AA  299E               	goto	l946
  1439     01AB                     u330:
  1440     01AB                     l952:
  1441     01AB  0871               	movf	___lwmod@divisor+1,w
  1442     01AC  0273               	subwf	___lwmod@dividend+1,w
  1443     01AD  1D03               	skipz
  1444     01AE  29B1               	goto	u345
  1445     01AF  0870               	movf	___lwmod@divisor,w
  1446     01B0  0272               	subwf	___lwmod@dividend,w
  1447     01B1                     u345:
  1448     01B1  1C03               	skipc
  1449     01B2  29B4               	goto	u341
  1450     01B3  29B5               	goto	u340
  1451     01B4                     u341:
  1452     01B4  29B9               	goto	l956
  1453     01B5                     u340:
  1454     01B5                     l954:
  1455     01B5  0870               	movf	___lwmod@divisor,w
  1456     01B6  02F2               	subwf	___lwmod@dividend,f
  1457     01B7  0871               	movf	___lwmod@divisor+1,w
  1458     01B8  3BF3               	subwfb	___lwmod@dividend+1,f
  1459     01B9                     l956:
  1460     01B9  3001               	movlw	1
  1461     01BA                     u355:
  1462     01BA  36F1               	lsrf	___lwmod@divisor+1,f
  1463     01BB  0CF0               	rrf	___lwmod@divisor,f
  1464     01BC  0B89               	decfsz	9,f
  1465     01BD  29BA               	goto	u355
  1466     01BE                     l958:
  1467     01BE  3001               	movlw	1
  1468     01BF  02F5               	subwf	___lwmod@counter,f
  1469     01C0  1D03               	btfss	3,2
  1470     01C1  29C3               	goto	u361
  1471     01C2  29C4               	goto	u360
  1472     01C3                     u361:
  1473     01C3  29AB               	goto	l952
  1474     01C4                     u360:
  1475     01C4                     l960:
  1476     01C4  0873               	movf	___lwmod@dividend+1,w
  1477     01C5  00F1               	movwf	?___lwmod+1
  1478     01C6  0872               	movf	___lwmod@dividend,w
  1479     01C7  00F0               	movwf	?___lwmod
  1480     01C8                     l556:
  1481     01C8  0008               	return
  1482     01C9                     __end_of___lwmod:
  1483                           
  1484                           	psect	text8
  1485     00D3                     __ptext8:	
  1486 ;; *************** function _ADsensing *****************
  1487 ;; Defined at:
  1488 ;;		line 37 in file "main.c"
  1489 ;; Parameters:    Size  Location     Type
  1490 ;;		None
  1491 ;; Auto vars:     Size  Location     Type
  1492 ;;		None
  1493 ;; Return value:  Size  Location     Type
  1494 ;;                  1    wreg      void 
  1495 ;; Registers used:
  1496 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1497 ;; Tracked objects:
  1498 ;;		On entry : 0/0
  1499 ;;		On exit  : 0/0
  1500 ;;		Unchanged: 0/0
  1501 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1502 ;;      Params:         0       0       0       0
  1503 ;;      Locals:         0       0       0       0
  1504 ;;      Temps:          0       6       0       0
  1505 ;;      Totals:         0       6       0       0
  1506 ;;Total ram usage:        6 bytes
  1507 ;; Hardware stack levels used: 1
  1508 ;; Hardware stack levels required when called: 2
  1509 ;; This function calls:
  1510 ;;		___lwdiv
  1511 ;;		_getADCValue
  1512 ;; This function is called by:
  1513 ;;		_main
  1514 ;; This function uses a non-reentrant model
  1515 ;;
  1516                           
  1517     00D3                     _ADsensing:	
  1518                           ;psect for function _ADsensing
  1519                           
  1520     00D3                     l982:	
  1521                           ;incstack = 0
  1522                           ; Regs used in _ADsensing: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1523                           
  1524                           
  1525                           ;main.c: 39:  if(ADSValue < 5)
  1526     00D3  3005               	movlw	5
  1527     00D4  0020               	movlb	0	; select bank0
  1528     00D5  0230               	subwf	_ADSValue,w
  1529     00D6  1803               	skipnc
  1530     00D7  28D9               	goto	u371
  1531     00D8  28DA               	goto	u370
  1532     00D9                     u371:
  1533     00D9  28EC               	goto	l988
  1534     00DA                     u370:
  1535     00DA                     l984:
  1536                           
  1537                           ;main.c: 40:  {;main.c: 41:   AD[ADSValue] = getADCValue(0x03);
  1538     00DA  3003               	movlw	3
  1539     00DB  3181  21C9  3180   	fcall	_getADCValue
  1540     00DE  0020               	movlb	0	; select bank0
  1541     00DF  3530               	lslf	_ADSValue,w
  1542     00E0  3E20               	addlw	(low (_AD| 0))& (0+255)
  1543     00E1  0086               	movwf	6
  1544     00E2  0187               	clrf	7
  1545     00E3  0870               	movf	?_getADCValue,w
  1546     00E4  3FC0               	movwi [0]fsr1
  1547     00E5  0871               	movf	?_getADCValue+1,w
  1548     00E6  3FC1               	movwi [1]fsr1
  1549     00E7                     l986:
  1550                           
  1551                           ;main.c: 42:   ADSValue++;
  1552     00E7  3001               	movlw	1
  1553     00E8  00B5               	movwf	??_ADsensing
  1554     00E9  0835               	movf	??_ADsensing,w
  1555     00EA  07B0               	addwf	_ADSValue,f
  1556                           
  1557                           ;main.c: 43:  }
  1558     00EB  2919               	goto	l65
  1559     00EC                     l988:
  1560                           
  1561                           ;main.c: 45:  {;main.c: 46:   ADValue = (AD[0] + AD[1] + AD[2] + AD[3] + AD[4]) / 5;
  1562     00EC  3005               	movlw	5
  1563     00ED  00F6               	movwf	___lwdiv@divisor
  1564     00EE  3000               	movlw	0
  1565     00EF  00F7               	movwf	___lwdiv@divisor+1
  1566     00F0  3008               	movlw	8
  1567     00F1  3E20               	addlw	(low (_AD| 0))& (0+255)
  1568     00F2  0086               	movwf	6
  1569     00F3  0187               	clrf	7
  1570     00F4  3006               	movlw	6
  1571     00F5  3E20               	addlw	(low (_AD| 0))& (0+255)
  1572     00F6  0084               	movwf	4
  1573     00F7  0185               	clrf	5
  1574     00F8  0824               	movf	_AD+4,w
  1575     00F9  0722               	addwf	_AD+2,w
  1576     00FA  00B5               	movwf	??_ADsensing
  1577     00FB  0825               	movf	_AD+5,w
  1578     00FC  3D23               	addwfc	_AD+3,w
  1579     00FD  00B6               	movwf	??_ADsensing+1
  1580     00FE  3F00               	moviw [0]fsr0
  1581     00FF  0735               	addwf	??_ADsensing,w
  1582     0100  00B7               	movwf	??_ADsensing+2
  1583     0101  3F01               	moviw [1]fsr0
  1584     0102  3D36               	addwfc	??_ADsensing+1,w
  1585     0103  00B8               	movwf	??_ADsensing+3
  1586     0104  3F40               	moviw [0]fsr1
  1587     0105  0737               	addwf	??_ADsensing+2,w
  1588     0106  00B9               	movwf	??_ADsensing+4
  1589     0107  3F41               	moviw [1]fsr1
  1590     0108  3D38               	addwfc	??_ADsensing+3,w
  1591     0109  00BA               	movwf	??_ADsensing+5
  1592     010A  0820               	movf	_AD,w
  1593     010B  0739               	addwf	??_ADsensing+4,w
  1594     010C  00F8               	movwf	___lwdiv@dividend
  1595     010D  0821               	movf	_AD+1,w
  1596     010E  3D3A               	addwfc	??_ADsensing+5,w
  1597     010F  00F9               	movwf	___lwdiv@dividend+1
  1598     0110  3181  2159  3180   	fcall	___lwdiv
  1599     0113  0877               	movf	?___lwdiv+1,w
  1600     0114  0020               	movlb	0	; select bank0
  1601     0115  00AF               	movwf	_ADValue+1
  1602     0116  0876               	movf	?___lwdiv,w
  1603     0117  00AE               	movwf	_ADValue
  1604     0118                     l990:
  1605                           
  1606                           ;main.c: 47:   ADSValue = 0;
  1607     0118  01B0               	clrf	_ADSValue
  1608     0119                     l65:
  1609     0119  0008               	return
  1610     011A                     __end_of_ADsensing:
  1611                           
  1612                           	psect	text9
  1613     01C9                     __ptext9:	
  1614 ;; *************** function _getADCValue *****************
  1615 ;; Defined at:
  1616 ;;		line 28 in file "main.c"
  1617 ;; Parameters:    Size  Location     Type
  1618 ;;  channel         1    wreg     unsigned char 
  1619 ;; Auto vars:     Size  Location     Type
  1620 ;;  channel         1    9[COMMON] unsigned char 
  1621 ;; Return value:  Size  Location     Type
  1622 ;;                  2    0[COMMON] unsigned int 
  1623 ;; Registers used:
  1624 ;;		wreg, status,2, status,0
  1625 ;; Tracked objects:
  1626 ;;		On entry : 0/0
  1627 ;;		On exit  : 0/0
  1628 ;;		Unchanged: 0/0
  1629 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1630 ;;      Params:         2       0       0       0
  1631 ;;      Locals:         1       0       0       0
  1632 ;;      Temps:          7       0       0       0
  1633 ;;      Totals:        10       0       0       0
  1634 ;;Total ram usage:       10 bytes
  1635 ;; Hardware stack levels used: 1
  1636 ;; Hardware stack levels required when called: 1
  1637 ;; This function calls:
  1638 ;;		Nothing
  1639 ;; This function is called by:
  1640 ;;		_ADsensing
  1641 ;; This function uses a non-reentrant model
  1642 ;;
  1643                           
  1644     01C9                     _getADCValue:	
  1645                           ;psect for function _getADCValue
  1646                           
  1647                           
  1648                           ;incstack = 0
  1649                           ; Regs used in _getADCValue: [wreg+status,2+status,0]
  1650                           ;getADCValue@channel stored from wreg
  1651     01C9  00F9               	movwf	getADCValue@channel
  1652     01CA                     l898:
  1653                           
  1654                           ;main.c: 28: unsigned int getADCValue(unsigned char channel);main.c: 29: {;main.c: 30:  
      +                             ADCON0bits.CHS = channel;
  1655     01CA  0879               	movf	getADCValue@channel,w
  1656     01CB  00F2               	movwf	??_getADCValue
  1657     01CC  0DF2               	rlf	??_getADCValue,f
  1658     01CD  0DF2               	rlf	??_getADCValue,f
  1659     01CE  0021               	movlb	1	; select bank1
  1660     01CF  081D               	movf	29,w	;volatile
  1661     01D0  0672               	xorwf	??_getADCValue,w
  1662     01D1  3983               	andlw	-125
  1663     01D2  0672               	xorwf	??_getADCValue,w
  1664     01D3  009D               	movwf	29	;volatile
  1665     01D4                     l900:
  1666                           
  1667                           ;main.c: 31:     _delay((unsigned long)((5)*(32000000/4000.0)));
  1668     01D4  3034               	movlw	52
  1669     01D5  00F2               	movwf	??_getADCValue
  1670     01D6  30F2               	movlw	242
  1671     01D7                     u487:
  1672     01D7  0B89               	decfsz	9,f
  1673     01D8  29D7               	goto	u487
  1674     01D9  0BF2               	decfsz	??_getADCValue,f
  1675     01DA  29D7               	goto	u487
  1676     01DB                     l902:
  1677                           
  1678                           ;main.c: 32:     ADCON0bits.GO = 1;
  1679     01DB  0021               	movlb	1	; select bank1
  1680     01DC  149D               	bsf	29,1	;volatile
  1681     01DD                     l57:	
  1682                           ;main.c: 33:     while (ADCON0bits.GO);
  1683                           
  1684     01DD  189D               	btfsc	29,1	;volatile
  1685     01DE  29E0               	goto	u221
  1686     01DF  29E1               	goto	u220
  1687     01E0                     u221:
  1688     01E0  29DD               	goto	l57
  1689     01E1                     u220:
  1690     01E1                     l904:
  1691                           
  1692                           ;main.c: 34:     return (unsigned int)((ADRESH << 2) | (ADRESL >> 6));
  1693     01E1  081B               	movf	27,w	;volatile
  1694     01E2  00F2               	movwf	??_getADCValue
  1695     01E3  3006               	movlw	6
  1696     01E4                     u235:
  1697     01E4  36F2               	lsrf	??_getADCValue,f
  1698     01E5  0B89               	decfsz	9,f
  1699     01E6  29E4               	goto	u235
  1700     01E7  0872               	movf	??_getADCValue,w
  1701     01E8  00F3               	movwf	??_getADCValue+1
  1702     01E9  01F4               	clrf	??_getADCValue+2
  1703     01EA  081C               	movf	28,w	;volatile
  1704     01EB  00F5               	movwf	??_getADCValue+3
  1705     01EC  01F6               	clrf	??_getADCValue+4
  1706     01ED  35F5               	lslf	??_getADCValue+3,f
  1707     01EE  0DF6               	rlf	??_getADCValue+4,f
  1708     01EF  35F5               	lslf	??_getADCValue+3,f
  1709     01F0  0DF6               	rlf	??_getADCValue+4,f
  1710     01F1  0873               	movf	??_getADCValue+1,w
  1711     01F2  0475               	iorwf	??_getADCValue+3,w
  1712     01F3  00F7               	movwf	??_getADCValue+5
  1713     01F4  0874               	movf	??_getADCValue+2,w
  1714     01F5  0476               	iorwf	??_getADCValue+4,w
  1715     01F6  00F8               	movwf	??_getADCValue+6
  1716     01F7  0877               	movf	??_getADCValue+5,w
  1717     01F8  00F0               	movwf	?_getADCValue
  1718     01F9  0878               	movf	??_getADCValue+6,w
  1719     01FA  00F1               	movwf	?_getADCValue+1
  1720     01FB                     l60:
  1721     01FB  0008               	return
  1722     01FC                     __end_of_getADCValue:
  1723                           
  1724                           	psect	text10
  1725     0159                     __ptext10:	
  1726 ;; *************** function ___lwdiv *****************
  1727 ;; Defined at:
  1728 ;;		line 5 in file "C:\XC8\pic\sources\c99\common\lwdiv.c"
  1729 ;; Parameters:    Size  Location     Type
  1730 ;;  divisor         2    6[COMMON] unsigned int 
  1731 ;;  dividend        2    8[COMMON] unsigned int 
  1732 ;; Auto vars:     Size  Location     Type
  1733 ;;  quotient        2   11[COMMON] unsigned int 
  1734 ;;  counter         1   13[COMMON] unsigned char 
  1735 ;; Return value:  Size  Location     Type
  1736 ;;                  2    6[COMMON] unsigned int 
  1737 ;; Registers used:
  1738 ;;		wreg, status,2, status,0
  1739 ;; Tracked objects:
  1740 ;;		On entry : 0/0
  1741 ;;		On exit  : 0/0
  1742 ;;		Unchanged: 0/0
  1743 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1744 ;;      Params:         4       0       0       0
  1745 ;;      Locals:         3       0       0       0
  1746 ;;      Temps:          1       0       0       0
  1747 ;;      Totals:         8       0       0       0
  1748 ;;Total ram usage:        8 bytes
  1749 ;; Hardware stack levels used: 1
  1750 ;; Hardware stack levels required when called: 1
  1751 ;; This function calls:
  1752 ;;		Nothing
  1753 ;; This function is called by:
  1754 ;;		_ADsensing
  1755 ;;		_Numerical_Partitioning
  1756 ;; This function uses a non-reentrant model
  1757 ;;
  1758                           
  1759     0159                     ___lwdiv:	
  1760                           ;psect for function ___lwdiv
  1761                           
  1762     0159                     l916:	
  1763                           ;incstack = 0
  1764                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  1765                           
  1766     0159  01FB               	clrf	___lwdiv@quotient
  1767     015A  01FC               	clrf	___lwdiv@quotient+1
  1768     015B                     l918:
  1769     015B  0876               	movf	___lwdiv@divisor,w
  1770     015C  0477               	iorwf	___lwdiv@divisor+1,w
  1771     015D  1903               	btfsc	3,2
  1772     015E  2960               	goto	u241
  1773     015F  2961               	goto	u240
  1774     0160                     u241:
  1775     0160  2990               	goto	l938
  1776     0161                     u240:
  1777     0161                     l920:
  1778     0161  01FD               	clrf	___lwdiv@counter
  1779     0162  0AFD               	incf	___lwdiv@counter,f
  1780     0163  296D               	goto	l926
  1781     0164                     l922:
  1782     0164  3001               	movlw	1
  1783     0165                     u255:
  1784     0165  35F6               	lslf	___lwdiv@divisor,f
  1785     0166  0DF7               	rlf	___lwdiv@divisor+1,f
  1786     0167  0B89               	decfsz	9,f
  1787     0168  2965               	goto	u255
  1788     0169                     l924:
  1789     0169  3001               	movlw	1
  1790     016A  00FA               	movwf	??___lwdiv
  1791     016B  087A               	movf	??___lwdiv,w
  1792     016C  07FD               	addwf	___lwdiv@counter,f
  1793     016D                     l926:
  1794     016D  1FF7               	btfss	___lwdiv@divisor+1,7
  1795     016E  2970               	goto	u261
  1796     016F  2971               	goto	u260
  1797     0170                     u261:
  1798     0170  2964               	goto	l922
  1799     0171                     u260:
  1800     0171                     l928:
  1801     0171  3001               	movlw	1
  1802     0172                     u275:
  1803     0172  35FB               	lslf	___lwdiv@quotient,f
  1804     0173  0DFC               	rlf	___lwdiv@quotient+1,f
  1805     0174  0B89               	decfsz	9,f
  1806     0175  2972               	goto	u275
  1807     0176  0877               	movf	___lwdiv@divisor+1,w
  1808     0177  0279               	subwf	___lwdiv@dividend+1,w
  1809     0178  1D03               	skipz
  1810     0179  297C               	goto	u285
  1811     017A  0876               	movf	___lwdiv@divisor,w
  1812     017B  0278               	subwf	___lwdiv@dividend,w
  1813     017C                     u285:
  1814     017C  1C03               	skipc
  1815     017D  297F               	goto	u281
  1816     017E  2980               	goto	u280
  1817     017F                     u281:
  1818     017F  2985               	goto	l934
  1819     0180                     u280:
  1820     0180                     l930:
  1821     0180  0876               	movf	___lwdiv@divisor,w
  1822     0181  02F8               	subwf	___lwdiv@dividend,f
  1823     0182  0877               	movf	___lwdiv@divisor+1,w
  1824     0183  3BF9               	subwfb	___lwdiv@dividend+1,f
  1825     0184                     l932:
  1826     0184  147B               	bsf	___lwdiv@quotient,0
  1827     0185                     l934:
  1828     0185  3001               	movlw	1
  1829     0186                     u295:
  1830     0186  36F7               	lsrf	___lwdiv@divisor+1,f
  1831     0187  0CF6               	rrf	___lwdiv@divisor,f
  1832     0188  0B89               	decfsz	9,f
  1833     0189  2986               	goto	u295
  1834     018A                     l936:
  1835     018A  3001               	movlw	1
  1836     018B  02FD               	subwf	___lwdiv@counter,f
  1837     018C  1D03               	btfss	3,2
  1838     018D  298F               	goto	u301
  1839     018E  2990               	goto	u300
  1840     018F                     u301:
  1841     018F  2971               	goto	l928
  1842     0190                     u300:
  1843     0190                     l938:
  1844     0190  087C               	movf	___lwdiv@quotient+1,w
  1845     0191  00F7               	movwf	?___lwdiv+1
  1846     0192  087B               	movf	___lwdiv@quotient,w
  1847     0193  00F6               	movwf	?___lwdiv
  1848     0194                     l546:
  1849     0194  0008               	return
  1850     0195                     __end_of___lwdiv:
  1851                           
  1852                           	psect	intentry
  1853     0004                     __pintentry:	
  1854 ;; *************** function _ISR *****************
  1855 ;; Defined at:
  1856 ;;		line 51 in file "main.c"
  1857 ;; Parameters:    Size  Location     Type
  1858 ;;		None
  1859 ;; Auto vars:     Size  Location     Type
  1860 ;;		None
  1861 ;; Return value:  Size  Location     Type
  1862 ;;                  1    wreg      void 
  1863 ;; Registers used:
  1864 ;;		None
  1865 ;; Tracked objects:
  1866 ;;		On entry : 0/0
  1867 ;;		On exit  : 0/0
  1868 ;;		Unchanged: 0/0
  1869 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1870 ;;      Params:         0       0       0       0
  1871 ;;      Locals:         0       0       0       0
  1872 ;;      Temps:          0       0       0       0
  1873 ;;      Totals:         0       0       0       0
  1874 ;;Total ram usage:        0 bytes
  1875 ;; Hardware stack levels used: 1
  1876 ;; This function calls:
  1877 ;;		Nothing
  1878 ;; This function is called by:
  1879 ;;		Interrupt level 1
  1880 ;; This function uses a non-reentrant model
  1881 ;;
  1882                           
  1883     0004                     _ISR:
  1884                           
  1885                           ;incstack = 0
  1886     0004  147E               	bsf	int$flags,0	;set compiler interrupt flag (level 1)
  1887                           
  1888                           ; Regs used in _ISR: []
  1889     0005  3180               	pagesel	$
  1890     0006                     i1l876:
  1891                           
  1892                           ;main.c: 53:  if(PIR1bits.ADIF == 1)
  1893     0006  0020               	movlb	0	; select bank0
  1894     0007  1F11               	btfss	17,6	;volatile
  1895     0008  280A               	goto	u19_21
  1896     0009  280B               	goto	u19_20
  1897     000A                     u19_21:
  1898     000A  2811               	goto	i1l71
  1899     000B                     u19_20:
  1900     000B                     i1l878:
  1901                           
  1902                           ;main.c: 54:  {;main.c: 55:   PIE1bits.ADIE = 0;
  1903     000B  0021               	movlb	1	; select bank1
  1904     000C  1311               	bcf	17,6	;volatile
  1905                           
  1906                           ;main.c: 56:   PIR1bits.ADIF = 0;
  1907     000D  0020               	movlb	0	; select bank0
  1908     000E  1311               	bcf	17,6	;volatile
  1909                           
  1910                           ;main.c: 58:   PIE1bits.ADIE = 1;
  1911     000F  0021               	movlb	1	; select bank1
  1912     0010  1711               	bsf	17,6	;volatile
  1913     0011                     i1l71:
  1914     0011  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  1915     0012  0009               	retfie
  1916     0013                     __end_of_ISR:
  1917     007E                     btemp	set	126	;btemp
  1918     007E                     int$flags	set	126
  1919     007E                     wtemp0	set	126
  1920                           
  1921                           	psect	config
  1922                           
  1923                           ;Config register CONFIG1 @ 0x8007
  1924                           ;	Oscillator Selection
  1925                           ;	FOSC = INTOSC, INTOSC oscillator: I/O function on CLKIN pin
  1926                           ;	Watchdog Timer Enable
  1927                           ;	WDTE = OFF, WDT disabled
  1928                           ;	Power-up Timer Enable
  1929                           ;	PWRTE = OFF, PWRT disabled
  1930                           ;	MCLR Pin Function Select
  1931                           ;	MCLRE = ON, MCLR/VPP pin function is MCLR
  1932                           ;	Flash Program Memory Code Protection
  1933                           ;	CP = OFF, Program memory code protection is disabled
  1934                           ;	Data Memory Code Protection
  1935                           ;	CPD = OFF, Data memory code protection is disabled
  1936                           ;	Brown-out Reset Enable
  1937                           ;	BOREN = ON, Brown-out Reset enabled
  1938                           ;	Clock Out Enable
  1939                           ;	CLKOUTEN = OFF, CLKOUT function is disabled. I/O or oscillator function on the CLKOUT 
      +                          pin
  1940                           ;	Internal/External Switchover
  1941                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  1942                           ;	Fail-Safe Clock Monitor Enable
  1943                           ;	FCMEN = ON, Fail-Safe Clock Monitor is enabled
  1944     8007                     	org	32775
  1945     8007  2FE4               	dw	12260
  1946                           
  1947                           ;Config register CONFIG2 @ 0x8008
  1948                           ;	Flash Memory Self-Write Protection
  1949                           ;	WRT = OFF, Write protection off
  1950                           ;	PLL Enable
  1951                           ;	PLLEN = ON, 4x PLL enabled
  1952                           ;	Stack Overflow/Underflow Reset Enable
  1953                           ;	STVREN = ON, Stack Overflow or Underflow will cause a Reset
  1954                           ;	Brown-out Reset Voltage Selection
  1955                           ;	BORV = LO, Brown-out Reset Voltage (Vbor), low trip point selected.
  1956                           ;	In-Circuit Debugger Mode
  1957                           ;	DEBUG = OFF, In-Circuit Debugger disabled, ICSPCLK and ICSPDAT are general purpose I/O
      +                           pins
  1958                           ;	Low-Voltage Programming Enable
  1959                           ;	LVP = OFF, High-voltage on MCLR/VPP must be used for programming
  1960     8008                     	org	32776
  1961     8008  1FFF               	dw	8191

Data Sizes:
    Strings     0
    Constant    10
    Data        0
    BSS         21
    Persistent  32
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80      8      29
    BANK1            80      0       0
    BANK2            64      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _TM1620_Dis->_TM1620Sencmd
    _TM1620Sencmd->_TM1620Sendata
    _Numerical_Partitioning->___lwdiv
    _ADsensing->___lwdiv
    ___lwdiv->___lwmod

Critical Paths under _ISR in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_ADsensing

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0    2543
                                              6 BANK0      2     2      0
                          _ADsensing
             _Numerical_Partitioning
                    _PIC12F1840_Init
                         _TM1620_Dis
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _TM1620_Dis                                           1     1      0     202
                                              6 COMMON     1     1      0
                       _TM1620Sencmd
                      _TM1620Sendata
 ---------------------------------------------------------------------------------
 (2) _TM1620Sencmd                                         2     2      0     112
                                              4 COMMON     2     2      0
                      _TM1620Sendata
 ---------------------------------------------------------------------------------
 (2) _TM1620Sendata                                        4     4      0      90
                                              0 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 (1) _PIC12F1840_Init                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Numerical_Partitioning                               2     0      2    1549
                                              0 BANK0      2     0      2
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              6     2      4     615
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (1) _ADsensing                                            6     6      0     792
                                              0 BANK0      6     6      0
                            ___lwdiv
                        _getADCValue
 ---------------------------------------------------------------------------------
 (2) _getADCValue                                         10     8      2      22
                                              0 COMMON    10     8      2
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4     770
                                              6 COMMON     8     4      4
                            ___lwmod (ARG)
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _ISR                                                  0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADsensing
     ___lwdiv
       ___lwmod (ARG)
     _getADCValue
   _Numerical_Partitioning
     ___lwdiv
     ___lwmod
   _PIC12F1840_Init
   _TM1620_Dis
     _TM1620Sencmd
       _TM1620Sendata
     _TM1620Sendata
   _setup

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM              E0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      2B       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50      8      1D       6       36.2%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            40      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               40      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
DATA                 0      0      2B      11        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.45 build 20230818022343 
Symbol Table                                                                                   Tue Dec 12 17:26:02 2023

                   ?_TM1620_Dis 0070                   ?_TM1620Sencmd 0070                              _AD 0020  
                            l60 01FB                              l57 01DD                              l65 0119  
                            l82 0239                              l74 0082                              l85 00D2  
                            l77 01FE                              l79 021F                  ?_TM1620Sendata 0070  
                           l110 0257                             l113 024A                             l546 0194  
                           l900 01D4                             l556 01C8                             l902 01DB  
                           l910 0223                             l920 0161                             l904 01E1  
                           l912 022B                             l930 0180                             l922 0164  
                           l914 0235                             l932 0184                             l924 0169  
                           l916 0159                             l908 0221                             l934 0185  
                           l926 016D                             l918 015B                             l950 01A7  
                           l942 0195                             l936 018A                             l928 0171  
                           l952 01AB                             l944 019B                             l960 01C4  
                           l938 0190                             l954 01B5                             l946 019E  
                           l890 0200                             l970 0242                             l956 01B9  
                           l948 01A3                             l964 024B                             l892 0211  
                           l884 01FD                             l980 0249                             l972 0243  
                           l990 0118                             l982 00D3                             l958 01BE  
                           l894 0212                             l974 0244                             l966 023A  
                           l984 00DA                             l992 0083                             l896 0215  
                           l976 0245                             l968 023D                             l898 01CA  
                           l986 00E7                             l994 0021                             l978 0247  
                           l988 00EC                             l996 002D                             l998 0031  
                           u210 021F                             u211 021E                             u300 0190  
                           u220 01E1                             u204 0205                             u301 018F  
                           u221 01E0                             u205 0204                             u310 019B  
                           u311 019A                             u240 0161                             u241 0160  
                           u330 01AB                             u235 01E4                             u331 01AA  
                           u260 0171                             u340 01B5                             u261 0170  
                           u341 01B4                             u325 019F                             u255 0165  
                           u407 0145                             u280 0180                             u360 01C4  
                           u281 017F                             u361 01C3                             u345 01B1  
                           u417 0151                             u370 00DA                             u275 0172  
                           u371 00D9                             u355 01BA                             u427 0064  
                           _ISR 0004                             u285 017C                             u437 006D  
                           u295 0186                             u447 0077                             u457 0226  
                           u467 0230                             u387 0126                             u477 0213  
                           u397 0134                             u487 01D7                             wreg 0009  
                          ?_ISR 0070                            l1000 0041                            l1010 006A  
                          l1002 004D                            l1012 0072                            l1004 005D  
                          l1020 011A                            l1014 0074                            l1006 0061  
                          l1030 0141                            l1022 011D                            l1016 007C  
                          l1008 0068                            l1032 014A                            l1024 012D  
                          l1018 0080                            l1034 014D                            l1026 0130  
                          l1028 0139                            _CODE 0258                            i1l71 0011  
                          _Unit 0031                            _main 011A                            fsr0h 0005  
                          fsr1h 0007                            indf0 0000                            fsr0l 0004  
                          fsr1l 0006                            btemp 007E                            start 0013  
                ??_TM1620Sencmd 0074                           ??_ISR 0070                           ?_main 0070  
               __end_of___lwdiv 0195                 __end_of___lwmod 01C9                           i1l876 0006  
                         i1l878 000B                           u19_20 000B                           u19_21 000A  
                         _Tenth 0032                 _PIC12F1840_Init 024B                           _setup 023A  
      ??_Numerical_Partitioning 007E                           status 0003                           wtemp0 007E  
                  __end_of_CODE 0262                 __initialization 0015                    __end_of_main 0159  
               ??_TM1620Sendata 0070                          ??_main 003B                          _ADCON1 009E  
                        _ADRESH 009C                          _ADRESL 009B                          ?_setup 0070  
             __end_of_ADsensing 011A                          _OSCCON 0099                       ??___lwdiv 007A  
                     ??___lwmod 0074         __end_of_PIC12F1840_Init 0258                      _Thousandth 0034  
          __end_of_TM1620Sencmd 023A         __end_of__initialization 001D              getADCValue@channel 0079  
                  ??_TM1620_Dis 0076                  __pcstackCOMMON 0070                   __end_of_setup 024B  
                       ??_setup 0070              __end_of_TM1620_Dis 0083                      __pbssBANK0 0020  
                    __pmaintext 011A                      __pintentry 0004          _Numerical_Partitioning 0083  
              ?_PIC12F1840_Init 0070                         _ADValue 002E                  TM1620Sendata@i 0073  
                 ??_getADCValue 0072                         ___lwdiv 0159                         ___lwmod 0195  
                       __ptext1 023A                         __ptext2 0021                         __ptext3 0220  
                       __ptext4 01FC                         __ptext5 024B                         __ptext6 0083  
                       __ptext7 0195                         __ptext8 00D3                         __ptext9 01C9  
                       clrloop0 0263            end_of_initialization 001D                       _ADsensing 00D3  
                  _TM1620Sencmd 0220             __end_of_getADCValue 01FC           __end_of_TM1620Sendata 0220  
                     _TRISAbits 008C                      ?_ADsensing 0070             start_initialization 0015  
                   __end_of_ISR 0013                       _Hundredth 0033                     _getADCValue 01C9  
       ?_Numerical_Partitioning 0035                       ___latbits 0001                   __pcstackBANK0 0035  
                   ??_ADsensing 0035                ___lwdiv@dividend 0078  __end_of_Numerical_Partitioning 00D3  
                      ?___lwdiv 0076                        ?___lwmod 0070                ___lwdiv@quotient 007B  
                      _ADSValue 0030                        _LATAbits 010C                       clear_ram0 0262  
                      _PIE1bits 0091                 TM1620Sencmd@com 0075                        _PIR1bits 0011  
                    _ADCON0bits 009D         TM1620Sendata@TM1620Data 0072                      _ANSELAbits 018C  
               ___lwdiv@divisor 0076                 ___lwdiv@counter 007D                        __ptext10 0159  
             ??_PIC12F1840_Init 0070                    ?_getADCValue 0070                      _TM1620_Dis 0021  
                      int$flags 007E                      _INTCONbits 000B               _currentResistance 002A  
                      intlevel1 0000                ___lwmod@dividend 0072                   __pstringtext1 0258  
                 _TM1620Sendata 01FC                 ___lwmod@divisor 0070                 ___lwmod@counter 0075  
Numerical_Partitioning@ADCValue 0035  
