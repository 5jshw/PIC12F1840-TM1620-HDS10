

Microchip MPLAB XC8 Assembler V2.45 build 20230818022343 
                                                                                               Tue Dec 12 17:33:07 2023

Microchip MPLAB XC8 C Compiler v2.45 (Free license) build 20230818022343 Og1 
     1                           	processor	12F1840
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	stringtext1,global,class=STRCODE,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	clrtext,global,class=CODE,delta=2
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2
    12                           	psect	text2,local,class=CODE,merge=1,delta=2
    13                           	psect	text3,local,class=CODE,merge=1,delta=2
    14                           	psect	text4,local,class=CODE,merge=1,delta=2
    15                           	psect	text5,local,class=CODE,merge=1,delta=2
    16                           	psect	text6,local,class=CODE,merge=1,delta=2
    17                           	psect	text7,local,class=CODE,merge=1,delta=2,group=1
    18                           	psect	text8,local,class=CODE,merge=1,delta=2
    19                           	psect	text9,local,class=CODE,merge=1,delta=2
    20                           	psect	text10,local,class=CODE,merge=1,delta=2,group=1
    21                           	psect	intentry,global,class=CODE,delta=2
    22                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    23                           	dabs	1,0x7E,2
    24     0000                     
    25                           ; Generated 07/09/2023 GMT
    26                           ; 
    27                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    28                           ; All rights reserved.
    29                           ; 
    30                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    31                           ; 
    32                           ; Redistribution and use in source and binary forms, with or without modification, are
    33                           ; permitted provided that the following conditions are met:
    34                           ; 
    35                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    36                           ;        conditions and the following disclaimer.
    37                           ; 
    38                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    39                           ;        of conditions and the following disclaimer in the documentation and/or other
    40                           ;        materials provided with the distribution. Publication is not required when
    41                           ;        this file is used in an embedded application.
    42                           ; 
    43                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    44                           ;        software without specific prior written permission.
    45                           ; 
    46                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    47                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    48                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    49                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    50                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    51                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    52                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    53                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    54                           ; 
    55                           ; 
    56                           ; Code-generator required, PIC12F1840 Definitions
    57                           ; 
    58                           ; SFR Addresses
    59     0000                     	;# 
    60     0001                     	;# 
    61     0002                     	;# 
    62     0003                     	;# 
    63     0004                     	;# 
    64     0005                     	;# 
    65     0006                     	;# 
    66     0007                     	;# 
    67     0008                     	;# 
    68     0009                     	;# 
    69     000A                     	;# 
    70     000B                     	;# 
    71     000C                     	;# 
    72     0011                     	;# 
    73     0012                     	;# 
    74     0015                     	;# 
    75     0016                     	;# 
    76     0016                     	;# 
    77     0017                     	;# 
    78     0018                     	;# 
    79     0019                     	;# 
    80     001A                     	;# 
    81     001B                     	;# 
    82     001C                     	;# 
    83     001E                     	;# 
    84     001F                     	;# 
    85     008C                     	;# 
    86     0091                     	;# 
    87     0092                     	;# 
    88     0095                     	;# 
    89     0096                     	;# 
    90     0097                     	;# 
    91     0098                     	;# 
    92     0099                     	;# 
    93     009A                     	;# 
    94     009B                     	;# 
    95     009B                     	;# 
    96     009C                     	;# 
    97     009D                     	;# 
    98     009E                     	;# 
    99     010C                     	;# 
   100     0111                     	;# 
   101     0112                     	;# 
   102     0115                     	;# 
   103     0116                     	;# 
   104     0117                     	;# 
   105     0118                     	;# 
   106     0119                     	;# 
   107     011A                     	;# 
   108     011B                     	;# 
   109     011D                     	;# 
   110     011D                     	;# 
   111     018C                     	;# 
   112     0191                     	;# 
   113     0191                     	;# 
   114     0192                     	;# 
   115     0193                     	;# 
   116     0193                     	;# 
   117     0193                     	;# 
   118     0194                     	;# 
   119     0195                     	;# 
   120     0196                     	;# 
   121     0197                     	;# 
   122     0199                     	;# 
   123     019A                     	;# 
   124     019B                     	;# 
   125     019B                     	;# 
   126     019B                     	;# 
   127     019B                     	;# 
   128     019C                     	;# 
   129     019C                     	;# 
   130     019D                     	;# 
   131     019E                     	;# 
   132     019F                     	;# 
   133     020C                     	;# 
   134     0211                     	;# 
   135     0211                     	;# 
   136     0212                     	;# 
   137     0212                     	;# 
   138     0213                     	;# 
   139     0213                     	;# 
   140     0214                     	;# 
   141     0214                     	;# 
   142     0215                     	;# 
   143     0215                     	;# 
   144     0215                     	;# 
   145     0216                     	;# 
   146     0216                     	;# 
   147     0217                     	;# 
   148     0217                     	;# 
   149     0291                     	;# 
   150     0291                     	;# 
   151     0292                     	;# 
   152     0293                     	;# 
   153     0294                     	;# 
   154     0295                     	;# 
   155     0295                     	;# 
   156     0296                     	;# 
   157     0391                     	;# 
   158     0392                     	;# 
   159     0393                     	;# 
   160     039A                     	;# 
   161     039C                     	;# 
   162     039D                     	;# 
   163     039E                     	;# 
   164     039F                     	;# 
   165     0FE4                     	;# 
   166     0FE5                     	;# 
   167     0FE6                     	;# 
   168     0FE7                     	;# 
   169     0FE8                     	;# 
   170     0FE9                     	;# 
   171     0FEA                     	;# 
   172     0FEB                     	;# 
   173     0FED                     	;# 
   174     0FEE                     	;# 
   175     0FEF                     	;# 
   176     0000                     	;# 
   177     0001                     	;# 
   178     0002                     	;# 
   179     0003                     	;# 
   180     0004                     	;# 
   181     0005                     	;# 
   182     0006                     	;# 
   183     0007                     	;# 
   184     0008                     	;# 
   185     0009                     	;# 
   186     000A                     	;# 
   187     000B                     	;# 
   188     000C                     	;# 
   189     0011                     	;# 
   190     0012                     	;# 
   191     0015                     	;# 
   192     0016                     	;# 
   193     0016                     	;# 
   194     0017                     	;# 
   195     0018                     	;# 
   196     0019                     	;# 
   197     001A                     	;# 
   198     001B                     	;# 
   199     001C                     	;# 
   200     001E                     	;# 
   201     001F                     	;# 
   202     008C                     	;# 
   203     0091                     	;# 
   204     0092                     	;# 
   205     0095                     	;# 
   206     0096                     	;# 
   207     0097                     	;# 
   208     0098                     	;# 
   209     0099                     	;# 
   210     009A                     	;# 
   211     009B                     	;# 
   212     009B                     	;# 
   213     009C                     	;# 
   214     009D                     	;# 
   215     009E                     	;# 
   216     010C                     	;# 
   217     0111                     	;# 
   218     0112                     	;# 
   219     0115                     	;# 
   220     0116                     	;# 
   221     0117                     	;# 
   222     0118                     	;# 
   223     0119                     	;# 
   224     011A                     	;# 
   225     011B                     	;# 
   226     011D                     	;# 
   227     011D                     	;# 
   228     018C                     	;# 
   229     0191                     	;# 
   230     0191                     	;# 
   231     0192                     	;# 
   232     0193                     	;# 
   233     0193                     	;# 
   234     0193                     	;# 
   235     0194                     	;# 
   236     0195                     	;# 
   237     0196                     	;# 
   238     0197                     	;# 
   239     0199                     	;# 
   240     019A                     	;# 
   241     019B                     	;# 
   242     019B                     	;# 
   243     019B                     	;# 
   244     019B                     	;# 
   245     019C                     	;# 
   246     019C                     	;# 
   247     019D                     	;# 
   248     019E                     	;# 
   249     019F                     	;# 
   250     020C                     	;# 
   251     0211                     	;# 
   252     0211                     	;# 
   253     0212                     	;# 
   254     0212                     	;# 
   255     0213                     	;# 
   256     0213                     	;# 
   257     0214                     	;# 
   258     0214                     	;# 
   259     0215                     	;# 
   260     0215                     	;# 
   261     0215                     	;# 
   262     0216                     	;# 
   263     0216                     	;# 
   264     0217                     	;# 
   265     0217                     	;# 
   266     0291                     	;# 
   267     0291                     	;# 
   268     0292                     	;# 
   269     0293                     	;# 
   270     0294                     	;# 
   271     0295                     	;# 
   272     0295                     	;# 
   273     0296                     	;# 
   274     0391                     	;# 
   275     0392                     	;# 
   276     0393                     	;# 
   277     039A                     	;# 
   278     039C                     	;# 
   279     039D                     	;# 
   280     039E                     	;# 
   281     039F                     	;# 
   282     0FE4                     	;# 
   283     0FE5                     	;# 
   284     0FE6                     	;# 
   285     0FE7                     	;# 
   286     0FE8                     	;# 
   287     0FE9                     	;# 
   288     0FEA                     	;# 
   289     0FEB                     	;# 
   290     0FED                     	;# 
   291     0FEE                     	;# 
   292     0FEF                     	;# 
   293     0000                     	;# 
   294     0001                     	;# 
   295     0002                     	;# 
   296     0003                     	;# 
   297     0004                     	;# 
   298     0005                     	;# 
   299     0006                     	;# 
   300     0007                     	;# 
   301     0008                     	;# 
   302     0009                     	;# 
   303     000A                     	;# 
   304     000B                     	;# 
   305     000C                     	;# 
   306     0011                     	;# 
   307     0012                     	;# 
   308     0015                     	;# 
   309     0016                     	;# 
   310     0016                     	;# 
   311     0017                     	;# 
   312     0018                     	;# 
   313     0019                     	;# 
   314     001A                     	;# 
   315     001B                     	;# 
   316     001C                     	;# 
   317     001E                     	;# 
   318     001F                     	;# 
   319     008C                     	;# 
   320     0091                     	;# 
   321     0092                     	;# 
   322     0095                     	;# 
   323     0096                     	;# 
   324     0097                     	;# 
   325     0098                     	;# 
   326     0099                     	;# 
   327     009A                     	;# 
   328     009B                     	;# 
   329     009B                     	;# 
   330     009C                     	;# 
   331     009D                     	;# 
   332     009E                     	;# 
   333     010C                     	;# 
   334     0111                     	;# 
   335     0112                     	;# 
   336     0115                     	;# 
   337     0116                     	;# 
   338     0117                     	;# 
   339     0118                     	;# 
   340     0119                     	;# 
   341     011A                     	;# 
   342     011B                     	;# 
   343     011D                     	;# 
   344     011D                     	;# 
   345     018C                     	;# 
   346     0191                     	;# 
   347     0191                     	;# 
   348     0192                     	;# 
   349     0193                     	;# 
   350     0193                     	;# 
   351     0193                     	;# 
   352     0194                     	;# 
   353     0195                     	;# 
   354     0196                     	;# 
   355     0197                     	;# 
   356     0199                     	;# 
   357     019A                     	;# 
   358     019B                     	;# 
   359     019B                     	;# 
   360     019B                     	;# 
   361     019B                     	;# 
   362     019C                     	;# 
   363     019C                     	;# 
   364     019D                     	;# 
   365     019E                     	;# 
   366     019F                     	;# 
   367     020C                     	;# 
   368     0211                     	;# 
   369     0211                     	;# 
   370     0212                     	;# 
   371     0212                     	;# 
   372     0213                     	;# 
   373     0213                     	;# 
   374     0214                     	;# 
   375     0214                     	;# 
   376     0215                     	;# 
   377     0215                     	;# 
   378     0215                     	;# 
   379     0216                     	;# 
   380     0216                     	;# 
   381     0217                     	;# 
   382     0217                     	;# 
   383     0291                     	;# 
   384     0291                     	;# 
   385     0292                     	;# 
   386     0293                     	;# 
   387     0294                     	;# 
   388     0295                     	;# 
   389     0295                     	;# 
   390     0296                     	;# 
   391     0391                     	;# 
   392     0392                     	;# 
   393     0393                     	;# 
   394     039A                     	;# 
   395     039C                     	;# 
   396     039D                     	;# 
   397     039E                     	;# 
   398     039F                     	;# 
   399     0FE4                     	;# 
   400     0FE5                     	;# 
   401     0FE6                     	;# 
   402     0FE7                     	;# 
   403     0FE8                     	;# 
   404     0FE9                     	;# 
   405     0FEA                     	;# 
   406     0FEB                     	;# 
   407     0FED                     	;# 
   408     0FEE                     	;# 
   409     0FEF                     	;# 
   410                           
   411                           	psect	stringtext1
   412     0268                     __pstringtext1:
   413     0268                     _CODE:
   414     0268  343F               	retlw	63
   415     0269  3406               	retlw	6
   416     026A  345B               	retlw	91
   417     026B  344F               	retlw	79
   418     026C  3466               	retlw	102
   419     026D  346D               	retlw	109
   420     026E  347D               	retlw	125
   421     026F  3407               	retlw	7
   422     0270  347F               	retlw	127
   423     0271  346F               	retlw	111
   424     0272                     __end_of_CODE:
   425     000B                     _INTCONbits	set	11
   426     0011                     _PIR1bits	set	17
   427     009E                     _ADCON1	set	158
   428     0099                     _OSCCON	set	153
   429     008C                     _TRISAbits	set	140
   430     0091                     _PIE1bits	set	145
   431     009B                     _ADRESL	set	155
   432     009C                     _ADRESH	set	156
   433     009D                     _ADCON0bits	set	157
   434     010C                     _LATAbits	set	268
   435     018C                     _ANSELAbits	set	396
   436                           
   437                           	psect	cinit
   438     0015                     start_initialization:	
   439                           ; #config settings
   440                           
   441     0015                     __initialization:
   442                           
   443                           ; Clear objects allocated to BANK0
   444     0015  3020               	movlw	low __pbssBANK0
   445     0016  0084               	movwf	4
   446     0017  3000               	movlw	high __pbssBANK0
   447     0018  0085               	movwf	5
   448     0019  3011               	movlw	17
   449     001A  3182  2272  3180   	fcall	clear_ram0
   450     001D                     end_of_initialization:	
   451                           ;End of C runtime variable initialization code
   452                           
   453     001D                     __end_of__initialization:
   454     001D  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
   455     001E  0020               	movlb	0
   456     001F  3181  292A         	ljmp	_main	;jump to C main() function
   457                           
   458                           	psect	bssBANK0
   459     0020                     __pbssBANK0:
   460     0020                     _AD:
   461     0020                     	ds	10
   462     002A                     _ADValue:
   463     002A                     	ds	2
   464     002C                     _ADSValue:
   465     002C                     	ds	1
   466     002D                     _Unit:
   467     002D                     	ds	1
   468     002E                     _Tenth:
   469     002E                     	ds	1
   470     002F                     _Hundredth:
   471     002F                     	ds	1
   472     0030                     _Thousandth:
   473     0030                     	ds	1
   474                           
   475                           	psect	clrtext
   476     0272                     clear_ram0:	
   477                           ;	Called with FSR0 containing the base address, and
   478                           ;	WREG with the size to clear
   479                           
   480     0272  0064               	clrwdt	;clear the watchdog before getting into this loop
   481     0273                     clrloop0:
   482     0273  0180               	clrf	0	;clear RAM location pointed to by FSR
   483     0274  3101               	addfsr 0,1
   484     0275  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
   485     0276  2A73               	goto	clrloop0	;have we reached the end yet?
   486     0277  3400               	retlw	0	;all done for this memory range, return
   487                           
   488                           	psect	cstackCOMMON
   489     0070                     __pcstackCOMMON:
   490     0070                     ?_PIC12F1840_Init:
   491     0070                     ??_PIC12F1840_Init:	
   492                           ; 1 bytes @ 0x0
   493                           
   494     0070                     ?_setup:	
   495                           ; 1 bytes @ 0x0
   496                           
   497     0070                     ??_setup:	
   498                           ; 1 bytes @ 0x0
   499                           
   500     0070                     ?_ADsensing:	
   501                           ; 1 bytes @ 0x0
   502                           
   503     0070                     ?_TM1620_Dis:	
   504                           ; 1 bytes @ 0x0
   505                           
   506     0070                     ?_TM1620Sencmd:	
   507                           ; 1 bytes @ 0x0
   508                           
   509     0070                     ?_TM1620Sendata:	
   510                           ; 1 bytes @ 0x0
   511                           
   512     0070                     ??_TM1620Sendata:	
   513                           ; 1 bytes @ 0x0
   514                           
   515     0070                     ?_main:	
   516                           ; 1 bytes @ 0x0
   517                           
   518     0070                     ?_ISR:	
   519                           ; 1 bytes @ 0x0
   520                           
   521     0070                     ??_ISR:	
   522                           ; 1 bytes @ 0x0
   523                           
   524     0070                     ?_getADCValue:	
   525                           ; 1 bytes @ 0x0
   526                           
   527     0070                     ?___lwmod:	
   528                           ; 2 bytes @ 0x0
   529                           
   530     0070                     ___lwmod@divisor:	
   531                           ; 2 bytes @ 0x0
   532                           
   533                           
   534                           ; 2 bytes @ 0x0
   535     0070                     	ds	2
   536     0072                     ??_getADCValue:
   537     0072                     TM1620Sendata@TM1620Data:	
   538                           ; 1 bytes @ 0x2
   539                           
   540     0072                     ___lwmod@dividend:	
   541                           ; 1 bytes @ 0x2
   542                           
   543                           
   544                           ; 2 bytes @ 0x2
   545     0072                     	ds	1
   546     0073                     TM1620Sendata@i:
   547                           
   548                           ; 1 bytes @ 0x3
   549     0073                     	ds	1
   550     0074                     ??_TM1620Sencmd:
   551     0074                     ??___lwmod:	
   552                           ; 1 bytes @ 0x4
   553                           
   554                           
   555                           ; 1 bytes @ 0x4
   556     0074                     	ds	1
   557     0075                     TM1620Sencmd@com:
   558     0075                     ___lwmod@counter:	
   559                           ; 1 bytes @ 0x5
   560                           
   561                           
   562                           ; 1 bytes @ 0x5
   563     0075                     	ds	1
   564     0076                     ??_TM1620_Dis:
   565     0076                     ?___lwdiv:	
   566                           ; 1 bytes @ 0x6
   567                           
   568     0076                     ___lwdiv@divisor:	
   569                           ; 2 bytes @ 0x6
   570                           
   571                           
   572                           ; 2 bytes @ 0x6
   573     0076                     	ds	2
   574     0078                     ___lwdiv@dividend:
   575                           
   576                           ; 2 bytes @ 0x8
   577     0078                     	ds	1
   578     0079                     getADCValue@channel:
   579                           
   580                           ; 1 bytes @ 0x9
   581     0079                     	ds	1
   582     007A                     ??___lwdiv:
   583                           
   584                           ; 1 bytes @ 0xA
   585     007A                     	ds	1
   586     007B                     ___lwdiv@quotient:
   587                           
   588                           ; 2 bytes @ 0xB
   589     007B                     	ds	2
   590     007D                     ___lwdiv@counter:
   591                           
   592                           ; 1 bytes @ 0xD
   593     007D                     	ds	1
   594     007E                     ??_Numerical_Partitioning:
   595                           
   596                           	psect	cstackBANK0
   597     0031                     __pcstackBANK0:	
   598                           ; 1 bytes @ 0xE
   599                           
   600     0031                     ??_ADsensing:
   601     0031                     ?_Numerical_Partitioning:	
   602                           ; 1 bytes @ 0x0
   603                           
   604     0031                     Numerical_Partitioning@ADCValue:	
   605                           ; 1 bytes @ 0x0
   606                           
   607                           
   608                           ; 2 bytes @ 0x0
   609     0031                     	ds	6
   610     0037                     ??_main:
   611                           
   612                           ; 1 bytes @ 0x6
   613     0037                     	ds	2
   614                           
   615                           	psect	maintext
   616     012A                     __pmaintext:	
   617 ;;
   618 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   619 ;;
   620 ;; *************** function _main *****************
   621 ;; Defined at:
   622 ;;		line 10 in file "main.c"
   623 ;; Parameters:    Size  Location     Type
   624 ;;		None
   625 ;; Auto vars:     Size  Location     Type
   626 ;;		None
   627 ;; Return value:  Size  Location     Type
   628 ;;                  1    wreg      void 
   629 ;; Registers used:
   630 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
   631 ;; Tracked objects:
   632 ;;		On entry : B1F/0
   633 ;;		On exit  : 0/0
   634 ;;		Unchanged: 0/0
   635 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   636 ;;      Params:         0       0       0       0
   637 ;;      Locals:         0       0       0       0
   638 ;;      Temps:          0       2       0       0
   639 ;;      Totals:         0       2       0       0
   640 ;;Total ram usage:        2 bytes
   641 ;; Hardware stack levels required when called: 4
   642 ;; This function calls:
   643 ;;		_ADsensing
   644 ;;		_Numerical_Partitioning
   645 ;;		_PIC12F1840_Init
   646 ;;		_TM1620_Dis
   647 ;;		_setup
   648 ;; This function is called by:
   649 ;;		Startup code after reset
   650 ;; This function uses a non-reentrant model
   651 ;;
   652                           
   653     012A                     _main:	
   654                           ;psect for function _main
   655                           
   656     012A                     l1030:	
   657                           ;incstack = 0
   658                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
   659                           
   660                           
   661                           ;main.c: 12:  PIC12F1840_Init();
   662     012A  3182  225B  3181   	fcall	_PIC12F1840_Init
   663     012D                     l1032:
   664                           
   665                           ;main.c: 13:  setup();
   666     012D  3182  224A  3181   	fcall	_setup
   667                           
   668                           ;main.c: 15:  _delay((unsigned long)((500)*(32000000/4000.0)));
   669     0130  3015               	movlw	21
   670     0131  0020               	movlb	0	; select bank0
   671     0132  00B8               	movwf	??_main+1
   672     0133  304B               	movlw	75
   673     0134  00B7               	movwf	??_main
   674     0135  30BE               	movlw	190
   675     0136                     u387:
   676     0136  0B89               	decfsz	9,f
   677     0137  2936               	goto	u387
   678     0138  0BB7               	decfsz	??_main,f
   679     0139  2936               	goto	u387
   680     013A  0BB8               	decfsz	??_main+1,f
   681     013B  2936               	goto	u387
   682     013C  0000               	nop
   683     013D                     l1034:
   684                           
   685                           ;main.c: 17:  {;main.c: 18:   ADsensing();
   686     013D  3180  20E3  3181   	fcall	_ADsensing
   687     0140                     l1036:
   688                           
   689                           ;main.c: 19:   _delay((unsigned long)((20)*(32000000/4000.0)));
   690     0140  30D0               	movlw	208
   691     0141  0020               	movlb	0	; select bank0
   692     0142  00B7               	movwf	??_main
   693     0143  30C9               	movlw	201
   694     0144                     u397:
   695     0144  0B89               	decfsz	9,f
   696     0145  2944               	goto	u397
   697     0146  0BB7               	decfsz	??_main,f
   698     0147  2944               	goto	u397
   699     0148  3200               	nop2
   700     0149                     l1038:
   701                           
   702                           ;main.c: 20:   Numerical_Partitioning(ADValue);
   703     0149  0020               	movlb	0	; select bank0
   704     014A  082B               	movf	_ADValue+1,w
   705     014B  00B2               	movwf	Numerical_Partitioning@ADCValue+1
   706     014C  082A               	movf	_ADValue,w
   707     014D  00B1               	movwf	Numerical_Partitioning@ADCValue
   708     014E  3180  2093  3181   	fcall	_Numerical_Partitioning
   709     0151                     l1040:
   710                           
   711                           ;main.c: 21:   _delay((unsigned long)((20)*(32000000/4000.0)));
   712     0151  30D0               	movlw	208
   713     0152  0020               	movlb	0	; select bank0
   714     0153  00B7               	movwf	??_main
   715     0154  30C9               	movlw	201
   716     0155                     u407:
   717     0155  0B89               	decfsz	9,f
   718     0156  2955               	goto	u407
   719     0157  0BB7               	decfsz	??_main,f
   720     0158  2955               	goto	u407
   721     0159  3200               	nop2
   722     015A                     l1042:
   723                           
   724                           ;main.c: 22:   TM1620_Dis();
   725     015A  3180  2021  3181   	fcall	_TM1620_Dis
   726     015D                     l1044:
   727                           
   728                           ;main.c: 23:   _delay((unsigned long)((20)*(32000000/4000.0)));
   729     015D  30D0               	movlw	208
   730     015E  0020               	movlb	0	; select bank0
   731     015F  00B7               	movwf	??_main
   732     0160  30C9               	movlw	201
   733     0161                     u417:
   734     0161  0B89               	decfsz	9,f
   735     0162  2961               	goto	u417
   736     0163  0BB7               	decfsz	??_main,f
   737     0164  2961               	goto	u417
   738     0165  3200               	nop2
   739     0166  293D               	goto	l1034
   740     0167  3180  2813         	ljmp	start
   741     0169                     __end_of_main:
   742                           
   743                           	psect	text1
   744     024A                     __ptext1:	
   745 ;; *************** function _setup *****************
   746 ;; Defined at:
   747 ;;		line 14 in file "Dew_Sensor.c"
   748 ;; Parameters:    Size  Location     Type
   749 ;;		None
   750 ;; Auto vars:     Size  Location     Type
   751 ;;		None
   752 ;; Return value:  Size  Location     Type
   753 ;;                  1    wreg      void 
   754 ;; Registers used:
   755 ;;		wreg
   756 ;; Tracked objects:
   757 ;;		On entry : 0/0
   758 ;;		On exit  : 0/0
   759 ;;		Unchanged: 0/0
   760 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   761 ;;      Params:         0       0       0       0
   762 ;;      Locals:         0       0       0       0
   763 ;;      Temps:          0       0       0       0
   764 ;;      Totals:         0       0       0       0
   765 ;;Total ram usage:        0 bytes
   766 ;; Hardware stack levels used: 1
   767 ;; Hardware stack levels required when called: 1
   768 ;; This function calls:
   769 ;;		Nothing
   770 ;; This function is called by:
   771 ;;		_main
   772 ;; This function uses a non-reentrant model
   773 ;;
   774                           
   775     024A                     _setup:	
   776                           ;psect for function _setup
   777                           
   778     024A                     l970:	
   779                           ;incstack = 0
   780                           ; Regs used in _setup: [wreg]
   781                           
   782                           
   783                           ;Dew_Sensor.c: 16:  OSCCON = 0b11110000;
   784     024A  30F0               	movlw	240
   785     024B  0021               	movlb	1	; select bank1
   786     024C  0099               	movwf	25	;volatile
   787     024D                     l972:
   788                           
   789                           ;Dew_Sensor.c: 18:  ANSELAbits.ANSA4 = 1;
   790     024D  0023               	movlb	3	; select bank3
   791     024E  160C               	bsf	12,4	;volatile
   792                           
   793                           ;Dew_Sensor.c: 19:  ADCON1 = 0x50;
   794     024F  3050               	movlw	80
   795     0250  0021               	movlb	1	; select bank1
   796     0251  009E               	movwf	30	;volatile
   797     0252                     l974:
   798                           
   799                           ;Dew_Sensor.c: 20:  INTCONbits.GIE = 1;
   800     0252  178B               	bsf	11,7	;volatile
   801     0253                     l976:
   802                           
   803                           ;Dew_Sensor.c: 21:  INTCONbits.PEIE = 1;
   804     0253  170B               	bsf	11,6	;volatile
   805     0254                     l978:
   806                           
   807                           ;Dew_Sensor.c: 22:  PIE1bits.ADIE = 1;
   808     0254  1711               	bsf	17,6	;volatile
   809     0255                     l980:
   810                           
   811                           ;Dew_Sensor.c: 23:  PIR1bits.ADIF = 0;
   812     0255  0020               	movlb	0	; select bank0
   813     0256  1311               	bcf	17,6	;volatile
   814     0257                     l982:
   815                           
   816                           ;Dew_Sensor.c: 24:  ADCON0bits.GO = 0;
   817     0257  0021               	movlb	1	; select bank1
   818     0258  109D               	bcf	29,1	;volatile
   819     0259                     l984:
   820                           
   821                           ;Dew_Sensor.c: 25:  ADCON0bits.ADON = 1;
   822     0259  141D               	bsf	29,0	;volatile
   823     025A                     l111:
   824     025A  0008               	return
   825     025B                     __end_of_setup:
   826                           
   827                           	psect	text2
   828     0021                     __ptext2:	
   829 ;; *************** function _TM1620_Dis *****************
   830 ;; Defined at:
   831 ;;		line 61 in file "main.c"
   832 ;; Parameters:    Size  Location     Type
   833 ;;		None
   834 ;; Auto vars:     Size  Location     Type
   835 ;;		None
   836 ;; Return value:  Size  Location     Type
   837 ;;                  1    wreg      void 
   838 ;; Registers used:
   839 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   840 ;; Tracked objects:
   841 ;;		On entry : 0/0
   842 ;;		On exit  : 0/0
   843 ;;		Unchanged: 0/0
   844 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   845 ;;      Params:         0       0       0       0
   846 ;;      Locals:         0       0       0       0
   847 ;;      Temps:          1       0       0       0
   848 ;;      Totals:         1       0       0       0
   849 ;;Total ram usage:        1 bytes
   850 ;; Hardware stack levels used: 1
   851 ;; Hardware stack levels required when called: 3
   852 ;; This function calls:
   853 ;;		_TM1620Sencmd
   854 ;;		_TM1620Sendata
   855 ;; This function is called by:
   856 ;;		_main
   857 ;; This function uses a non-reentrant model
   858 ;;
   859                           
   860     0021                     _TM1620_Dis:	
   861                           ;psect for function _TM1620_Dis
   862                           
   863     0021                     l998:	
   864                           ;incstack = 0
   865                           ; Regs used in _TM1620_Dis: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   866                           
   867                           
   868                           ;main.c: 64:  TM1620Sencmd(0x02);
   869     0021  3002               	movlw	2
   870     0022  3182  2230  3180   	fcall	_TM1620Sencmd
   871                           
   872                           ;main.c: 65:  TM1620Sencmd(0x40);
   873     0025  3040               	movlw	64
   874     0026  3182  2230  3180   	fcall	_TM1620Sencmd
   875                           
   876                           ;main.c: 66:     TM1620Sencmd(0xC0);
   877     0029  30C0               	movlw	192
   878     002A  3182  2230  3180   	fcall	_TM1620Sencmd
   879     002D                     l1000:
   880                           
   881                           ;main.c: 67:  _delay((unsigned long)((5)*(32000000/4000000.0)));
   882     002D  300D               	movlw	13
   883     002E                     u427:
   884     002E  0B89               	decfsz	9,f
   885     002F  282E               	goto	u427
   886     0030  0000               	nop
   887     0031                     l1002:
   888                           
   889                           ;main.c: 69:     TM1620Sendata(CODE[Thousandth]);
   890     0031  0020               	movlb	0	; select bank0
   891     0032  0830               	movf	_Thousandth,w
   892     0033  3E68               	addlw	low (_CODE| (0+32768))
   893     0034  0084               	movwf	4
   894     0035  3082               	movlw	high (_CODE| (0+32768))
   895     0036  1803               	skipnc
   896     0037  3E01               	addlw	1
   897     0038  0085               	movwf	5
   898     0039  0800               	movf	0,w	;code access
   899     003A  3182  220C  3180   	fcall	_TM1620Sendata
   900     003D                     l1004:
   901                           
   902                           ;main.c: 70:     TM1620Sendata(0x00);
   903     003D  3000               	movlw	0
   904     003E  3182  220C  3180   	fcall	_TM1620Sendata
   905     0041                     l1006:
   906                           
   907                           ;main.c: 71:  TM1620Sendata(CODE[Hundredth]);
   908     0041  0020               	movlb	0	; select bank0
   909     0042  082F               	movf	_Hundredth,w
   910     0043  3E68               	addlw	low (_CODE| (0+32768))
   911     0044  0084               	movwf	4
   912     0045  3082               	movlw	high (_CODE| (0+32768))
   913     0046  1803               	skipnc
   914     0047  3E01               	addlw	1
   915     0048  0085               	movwf	5
   916     0049  0800               	movf	0,w	;code access
   917     004A  3182  220C  3180   	fcall	_TM1620Sendata
   918     004D                     l1008:
   919                           
   920                           ;main.c: 72:     TM1620Sendata(0x00);
   921     004D  3000               	movlw	0
   922     004E  3182  220C  3180   	fcall	_TM1620Sendata
   923     0051                     l1010:
   924                           
   925                           ;main.c: 73:  TM1620Sendata(CODE[Tenth]);
   926     0051  0020               	movlb	0	; select bank0
   927     0052  082E               	movf	_Tenth,w
   928     0053  3E68               	addlw	low (_CODE| (0+32768))
   929     0054  0084               	movwf	4
   930     0055  3082               	movlw	high (_CODE| (0+32768))
   931     0056  1803               	skipnc
   932     0057  3E01               	addlw	1
   933     0058  0085               	movwf	5
   934     0059  0800               	movf	0,w	;code access
   935     005A  3182  220C  3180   	fcall	_TM1620Sendata
   936     005D                     l1012:
   937                           
   938                           ;main.c: 74:     TM1620Sendata(0x00);
   939     005D  3000               	movlw	0
   940     005E  3182  220C  3180   	fcall	_TM1620Sendata
   941     0061                     l1014:
   942                           
   943                           ;main.c: 75:  TM1620Sendata(CODE[Unit]);
   944     0061  0020               	movlb	0	; select bank0
   945     0062  082D               	movf	_Unit,w
   946     0063  3E68               	addlw	low (_CODE| (0+32768))
   947     0064  0084               	movwf	4
   948     0065  3082               	movlw	high (_CODE| (0+32768))
   949     0066  1803               	skipnc
   950     0067  3E01               	addlw	1
   951     0068  0085               	movwf	5
   952     0069  0800               	movf	0,w	;code access
   953     006A  3182  220C  3180   	fcall	_TM1620Sendata
   954     006D                     l1016:
   955                           
   956                           ;main.c: 76:     TM1620Sendata(0x00);
   957     006D  3000               	movlw	0
   958     006E  3182  220C  3180   	fcall	_TM1620Sendata
   959     0071                     l1018:
   960                           
   961                           ;main.c: 77:  _delay((unsigned long)((5)*(32000000/4000.0)));
   962     0071  3034               	movlw	52
   963     0072  00F6               	movwf	??_TM1620_Dis
   964     0073  30F2               	movlw	242
   965     0074                     u437:
   966     0074  0B89               	decfsz	9,f
   967     0075  2874               	goto	u437
   968     0076  0BF6               	decfsz	??_TM1620_Dis,f
   969     0077  2874               	goto	u437
   970     0078                     l1020:
   971                           
   972                           ;main.c: 79:  LATAbits.LATA0 = 1;
   973     0078  0022               	movlb	2	; select bank2
   974     0079  140C               	bsf	12,0	;volatile
   975     007A                     l1022:
   976                           
   977                           ;main.c: 80:  _delay((unsigned long)((1)*(32000000/4000.0)));
   978     007A  300B               	movlw	11
   979     007B  00F6               	movwf	??_TM1620_Dis
   980     007C  3062               	movlw	98
   981     007D                     u447:
   982     007D  0B89               	decfsz	9,f
   983     007E  287D               	goto	u447
   984     007F  0BF6               	decfsz	??_TM1620_Dis,f
   985     0080  287D               	goto	u447
   986     0081  3200               	nop2
   987     0082                     l1024:
   988                           
   989                           ;main.c: 81:  LATAbits.LATA0 = 0;
   990     0082  0022               	movlb	2	; select bank2
   991     0083  100C               	bcf	12,0	;volatile
   992     0084                     l1026:
   993                           
   994                           ;main.c: 82:  _delay((unsigned long)((1)*(32000000/4000.0)));
   995     0084  300B               	movlw	11
   996     0085  00F6               	movwf	??_TM1620_Dis
   997     0086  3062               	movlw	98
   998     0087                     u457:
   999     0087  0B89               	decfsz	9,f
  1000     0088  2887               	goto	u457
  1001     0089  0BF6               	decfsz	??_TM1620_Dis,f
  1002     008A  2887               	goto	u457
  1003     008B  3200               	nop2
  1004                           
  1005                           ;main.c: 83:  TM1620Sencmd(0x8F);
  1006     008C  308F               	movlw	143
  1007     008D  3182  2230  3180   	fcall	_TM1620Sencmd
  1008     0090                     l1028:
  1009                           
  1010                           ;main.c: 84:  LATAbits.LATA0 = 1;
  1011     0090  0022               	movlb	2	; select bank2
  1012     0091  140C               	bsf	12,0	;volatile
  1013     0092                     l72:
  1014     0092  0008               	return
  1015     0093                     __end_of_TM1620_Dis:
  1016                           
  1017                           	psect	text3
  1018     0230                     __ptext3:	
  1019 ;; *************** function _TM1620Sencmd *****************
  1020 ;; Defined at:
  1021 ;;		line 99 in file "main.c"
  1022 ;; Parameters:    Size  Location     Type
  1023 ;;  com             1    wreg     unsigned char 
  1024 ;; Auto vars:     Size  Location     Type
  1025 ;;  com             1    5[COMMON] unsigned char 
  1026 ;; Return value:  Size  Location     Type
  1027 ;;                  1    wreg      void 
  1028 ;; Registers used:
  1029 ;;		wreg, status,2, status,0, pclath, cstack
  1030 ;; Tracked objects:
  1031 ;;		On entry : 0/0
  1032 ;;		On exit  : 0/0
  1033 ;;		Unchanged: 0/0
  1034 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1035 ;;      Params:         0       0       0       0
  1036 ;;      Locals:         1       0       0       0
  1037 ;;      Temps:          1       0       0       0
  1038 ;;      Totals:         2       0       0       0
  1039 ;;Total ram usage:        2 bytes
  1040 ;; Hardware stack levels used: 1
  1041 ;; Hardware stack levels required when called: 2
  1042 ;; This function calls:
  1043 ;;		_TM1620Sendata
  1044 ;; This function is called by:
  1045 ;;		_TM1620_Dis
  1046 ;;		_TM1620_Init
  1047 ;; This function uses a non-reentrant model
  1048 ;;
  1049                           
  1050     0230                     _TM1620Sencmd:	
  1051                           ;psect for function _TM1620Sencmd
  1052                           
  1053                           
  1054                           ;incstack = 0
  1055                           ; Regs used in _TM1620Sencmd: [wreg+status,2+status,0+pclath+cstack]
  1056                           ;TM1620Sencmd@com stored from wreg
  1057     0230  00F5               	movwf	TM1620Sencmd@com
  1058     0231                     l912:
  1059                           
  1060                           ;main.c: 99: void TM1620Sencmd(char com);main.c: 100:  {;main.c: 101:  LATAbits.LATA0 = 
      +                          1;
  1061     0231  0022               	movlb	2	; select bank2
  1062     0232  140C               	bsf	12,0	;volatile
  1063     0233                     l914:
  1064                           
  1065                           ;main.c: 102:  _delay((unsigned long)((1)*(32000000/4000.0)));
  1066     0233  300B               	movlw	11
  1067     0234  00F4               	movwf	??_TM1620Sencmd
  1068     0235  3062               	movlw	98
  1069     0236                     u467:
  1070     0236  0B89               	decfsz	9,f
  1071     0237  2A36               	goto	u467
  1072     0238  0BF4               	decfsz	??_TM1620Sencmd,f
  1073     0239  2A36               	goto	u467
  1074     023A  3200               	nop2
  1075     023B                     l916:
  1076                           
  1077                           ;main.c: 103:  LATAbits.LATA0 = 0;
  1078     023B  0022               	movlb	2	; select bank2
  1079     023C  100C               	bcf	12,0	;volatile
  1080                           
  1081                           ;main.c: 104:  _delay((unsigned long)((1)*(32000000/4000.0)));
  1082     023D  300B               	movlw	11
  1083     023E  00F4               	movwf	??_TM1620Sencmd
  1084     023F  3062               	movlw	98
  1085     0240                     u477:
  1086     0240  0B89               	decfsz	9,f
  1087     0241  2A40               	goto	u477
  1088     0242  0BF4               	decfsz	??_TM1620Sencmd,f
  1089     0243  2A40               	goto	u477
  1090     0244  3200               	nop2
  1091     0245                     l918:
  1092                           
  1093                           ;main.c: 105:  TM1620Sendata(com);
  1094     0245  0875               	movf	TM1620Sencmd@com,w
  1095     0246  3182  220C  3182   	fcall	_TM1620Sendata
  1096     0249                     l80:
  1097     0249  0008               	return
  1098     024A                     __end_of_TM1620Sencmd:
  1099                           
  1100                           	psect	text4
  1101     020C                     __ptext4:	
  1102 ;; *************** function _TM1620Sendata *****************
  1103 ;; Defined at:
  1104 ;;		line 87 in file "main.c"
  1105 ;; Parameters:    Size  Location     Type
  1106 ;;  TM1620Data      1    wreg     unsigned char 
  1107 ;; Auto vars:     Size  Location     Type
  1108 ;;  TM1620Data      1    2[COMMON] unsigned char 
  1109 ;;  i               1    3[COMMON] unsigned char 
  1110 ;; Return value:  Size  Location     Type
  1111 ;;                  1    wreg      void 
  1112 ;; Registers used:
  1113 ;;		wreg, status,2, status,0
  1114 ;; Tracked objects:
  1115 ;;		On entry : 0/0
  1116 ;;		On exit  : 0/0
  1117 ;;		Unchanged: 0/0
  1118 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1119 ;;      Params:         0       0       0       0
  1120 ;;      Locals:         2       0       0       0
  1121 ;;      Temps:          2       0       0       0
  1122 ;;      Totals:         4       0       0       0
  1123 ;;Total ram usage:        4 bytes
  1124 ;; Hardware stack levels used: 1
  1125 ;; Hardware stack levels required when called: 1
  1126 ;; This function calls:
  1127 ;;		Nothing
  1128 ;; This function is called by:
  1129 ;;		_TM1620_Dis
  1130 ;;		_TM1620Sencmd
  1131 ;; This function uses a non-reentrant model
  1132 ;;
  1133                           
  1134     020C                     _TM1620Sendata:	
  1135                           ;psect for function _TM1620Sendata
  1136                           
  1137                           
  1138                           ;incstack = 0
  1139                           ; Regs used in _TM1620Sendata: [wreg+status,2+status,0]
  1140                           ;TM1620Sendata@TM1620Data stored from wreg
  1141     020C  00F2               	movwf	TM1620Sendata@TM1620Data
  1142     020D                     l888:
  1143                           
  1144                           ;main.c: 87: void TM1620Sendata(char TM1620Data);main.c: 88: {;main.c: 89:  char i;;main
      +                          .c: 90:  for(i = 0; i < 8; i++)
  1145     020D  01F3               	clrf	TM1620Sendata@i
  1146     020E                     l75:
  1147                           
  1148                           ;main.c: 91:  {;main.c: 92:   LATAbits.LATA1 = 0;
  1149     020E  0022               	movlb	2	; select bank2
  1150     020F  108C               	bcf	12,1	;volatile
  1151     0210                     l894:
  1152                           
  1153                           ;main.c: 93:   LATAbits.LATA2 = 1 & (TM1620Data >> i);
  1154     0210  0872               	movf	TM1620Sendata@TM1620Data,w
  1155     0211  00F0               	movwf	??_TM1620Sendata
  1156     0212  0A73               	incf	TM1620Sendata@i,w
  1157     0213  2A15               	goto	u204
  1158     0214                     u205:
  1159     0214  36F0               	lsrf	??_TM1620Sendata,f
  1160     0215                     u204:
  1161     0215  0B89               	decfsz	9,f
  1162     0216  2A14               	goto	u205
  1163     0217  0870               	movf	??_TM1620Sendata,w
  1164     0218  3901               	andlw	1
  1165     0219  00F1               	movwf	??_TM1620Sendata+1
  1166     021A  0DF1               	rlf	??_TM1620Sendata+1,f
  1167     021B  0DF1               	rlf	??_TM1620Sendata+1,f
  1168     021C  080C               	movf	12,w	;volatile
  1169     021D  0671               	xorwf	??_TM1620Sendata+1,w
  1170     021E  39FB               	andlw	-5
  1171     021F  0671               	xorwf	??_TM1620Sendata+1,w
  1172     0220  008C               	movwf	12	;volatile
  1173     0221                     l896:
  1174                           
  1175                           ;main.c: 94:   LATAbits.LATA1 = 1;
  1176     0221  148C               	bsf	12,1	;volatile
  1177     0222                     l898:
  1178                           
  1179                           ;main.c: 95:   _delay((unsigned long)((3)*(32000000/4000000.0)));
  1180     0222  3008               	movlw	8
  1181     0223                     u487:
  1182     0223  0B89               	decfsz	9,f
  1183     0224  2A23               	goto	u487
  1184     0225                     l900:
  1185                           
  1186                           ;main.c: 96:  }
  1187     0225  3001               	movlw	1
  1188     0226  00F0               	movwf	??_TM1620Sendata
  1189     0227  0870               	movf	??_TM1620Sendata,w
  1190     0228  07F3               	addwf	TM1620Sendata@i,f
  1191     0229  3008               	movlw	8
  1192     022A  0273               	subwf	TM1620Sendata@i,w
  1193     022B  1C03               	skipc
  1194     022C  2A2E               	goto	u211
  1195     022D  2A2F               	goto	u210
  1196     022E                     u211:
  1197     022E  2A0E               	goto	l75
  1198     022F                     u210:
  1199     022F                     l77:
  1200     022F  0008               	return
  1201     0230                     __end_of_TM1620Sendata:
  1202                           
  1203                           	psect	text5
  1204     025B                     __ptext5:	
  1205 ;; *************** function _PIC12F1840_Init *****************
  1206 ;; Defined at:
  1207 ;;		line 4 in file "Dew_Sensor.c"
  1208 ;; Parameters:    Size  Location     Type
  1209 ;;		None
  1210 ;; Auto vars:     Size  Location     Type
  1211 ;;		None
  1212 ;; Return value:  Size  Location     Type
  1213 ;;                  1    wreg      void 
  1214 ;; Registers used:
  1215 ;;		None
  1216 ;; Tracked objects:
  1217 ;;		On entry : 0/0
  1218 ;;		On exit  : 0/0
  1219 ;;		Unchanged: 0/0
  1220 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1221 ;;      Params:         0       0       0       0
  1222 ;;      Locals:         0       0       0       0
  1223 ;;      Temps:          0       0       0       0
  1224 ;;      Totals:         0       0       0       0
  1225 ;;Total ram usage:        0 bytes
  1226 ;; Hardware stack levels used: 1
  1227 ;; Hardware stack levels required when called: 1
  1228 ;; This function calls:
  1229 ;;		Nothing
  1230 ;; This function is called by:
  1231 ;;		_main
  1232 ;; This function uses a non-reentrant model
  1233 ;;
  1234                           
  1235     025B                     _PIC12F1840_Init:	
  1236                           ;psect for function _PIC12F1840_Init
  1237                           
  1238     025B                     l968:	
  1239                           ;incstack = 0
  1240                           ; Regs used in _PIC12F1840_Init: []
  1241                           
  1242                           
  1243                           ;Dew_Sensor.c: 6:  LATAbits.LATA0 = 1;
  1244     025B  0022               	movlb	2	; select bank2
  1245     025C  140C               	bsf	12,0	;volatile
  1246                           
  1247                           ;Dew_Sensor.c: 7:  TRISAbits.TRISA0 = 0;
  1248     025D  0021               	movlb	1	; select bank1
  1249     025E  100C               	bcf	12,0	;volatile
  1250                           
  1251                           ;Dew_Sensor.c: 8:  LATAbits.LATA1 = 1;
  1252     025F  0022               	movlb	2	; select bank2
  1253     0260  148C               	bsf	12,1	;volatile
  1254                           
  1255                           ;Dew_Sensor.c: 9:  TRISAbits.TRISA1 = 0;
  1256     0261  0021               	movlb	1	; select bank1
  1257     0262  108C               	bcf	12,1	;volatile
  1258                           
  1259                           ;Dew_Sensor.c: 10:  LATAbits.LATA2 = 1;
  1260     0263  0022               	movlb	2	; select bank2
  1261     0264  150C               	bsf	12,2	;volatile
  1262                           
  1263                           ;Dew_Sensor.c: 11:  TRISAbits.TRISA2 = 0;
  1264     0265  0021               	movlb	1	; select bank1
  1265     0266  110C               	bcf	12,2	;volatile
  1266     0267                     l108:
  1267     0267  0008               	return
  1268     0268                     __end_of_PIC12F1840_Init:
  1269                           
  1270                           	psect	text6
  1271     0093                     __ptext6:	
  1272 ;; *************** function _Numerical_Partitioning *****************
  1273 ;; Defined at:
  1274 ;;		line 108 in file "main.c"
  1275 ;; Parameters:    Size  Location     Type
  1276 ;;  ADCValue        2    0[BANK0 ] unsigned int 
  1277 ;; Auto vars:     Size  Location     Type
  1278 ;;		None
  1279 ;; Return value:  Size  Location     Type
  1280 ;;                  1    wreg      void 
  1281 ;; Registers used:
  1282 ;;		wreg, status,2, status,0, pclath, cstack
  1283 ;; Tracked objects:
  1284 ;;		On entry : 0/0
  1285 ;;		On exit  : 0/0
  1286 ;;		Unchanged: 0/0
  1287 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1288 ;;      Params:         0       2       0       0
  1289 ;;      Locals:         0       0       0       0
  1290 ;;      Temps:          0       0       0       0
  1291 ;;      Totals:         0       2       0       0
  1292 ;;Total ram usage:        2 bytes
  1293 ;; Hardware stack levels used: 1
  1294 ;; Hardware stack levels required when called: 2
  1295 ;; This function calls:
  1296 ;;		___lwdiv
  1297 ;;		___lwmod
  1298 ;; This function is called by:
  1299 ;;		_main
  1300 ;; This function uses a non-reentrant model
  1301 ;;
  1302                           
  1303     0093                     _Numerical_Partitioning:	
  1304                           ;psect for function _Numerical_Partitioning
  1305                           
  1306     0093                     l996:	
  1307                           ;incstack = 0
  1308                           ; Regs used in _Numerical_Partitioning: [wreg+status,2+status,0+pclath+cstack]
  1309                           
  1310                           
  1311                           ;main.c: 108: void Numerical_Partitioning(unsigned int ADCValue);main.c: 109: {;main.c: 
      +                          110:  Thousandth = ADCValue / 1000;
  1312     0093  30E8               	movlw	232
  1313     0094  00F6               	movwf	___lwdiv@divisor
  1314     0095  3003               	movlw	3
  1315     0096  00F7               	movwf	___lwdiv@divisor+1
  1316     0097  0020               	movlb	0	; select bank0
  1317     0098  0832               	movf	Numerical_Partitioning@ADCValue+1,w
  1318     0099  00F9               	movwf	___lwdiv@dividend+1
  1319     009A  0831               	movf	Numerical_Partitioning@ADCValue,w
  1320     009B  00F8               	movwf	___lwdiv@dividend
  1321     009C  3181  2169  3180   	fcall	___lwdiv
  1322     009F  0876               	movf	?___lwdiv,w
  1323     00A0  0020               	movlb	0	; select bank0
  1324     00A1  00B0               	movwf	_Thousandth
  1325                           
  1326                           ;main.c: 111:  Hundredth = ADCValue % 1000 / 100;
  1327     00A2  3064               	movlw	100
  1328     00A3  00F6               	movwf	___lwdiv@divisor
  1329     00A4  3000               	movlw	0
  1330     00A5  00F7               	movwf	___lwdiv@divisor+1
  1331     00A6  0832               	movf	Numerical_Partitioning@ADCValue+1,w
  1332     00A7  00F3               	movwf	___lwmod@dividend+1
  1333     00A8  0831               	movf	Numerical_Partitioning@ADCValue,w
  1334     00A9  00F2               	movwf	___lwmod@dividend
  1335     00AA  30E8               	movlw	232
  1336     00AB  00F0               	movwf	___lwmod@divisor
  1337     00AC  3003               	movlw	3
  1338     00AD  00F1               	movwf	___lwmod@divisor+1
  1339     00AE  3181  21A5  3180   	fcall	___lwmod
  1340     00B1  0871               	movf	?___lwmod+1,w
  1341     00B2  00F9               	movwf	___lwdiv@dividend+1
  1342     00B3  0870               	movf	?___lwmod,w
  1343     00B4  00F8               	movwf	___lwdiv@dividend
  1344     00B5  3181  2169  3180   	fcall	___lwdiv
  1345     00B8  0876               	movf	?___lwdiv,w
  1346     00B9  0020               	movlb	0	; select bank0
  1347     00BA  00AF               	movwf	_Hundredth
  1348                           
  1349                           ;main.c: 112:  Tenth = ADCValue % 100 / 10;
  1350     00BB  300A               	movlw	10
  1351     00BC  00F6               	movwf	___lwdiv@divisor
  1352     00BD  3000               	movlw	0
  1353     00BE  00F7               	movwf	___lwdiv@divisor+1
  1354     00BF  0832               	movf	Numerical_Partitioning@ADCValue+1,w
  1355     00C0  00F3               	movwf	___lwmod@dividend+1
  1356     00C1  0831               	movf	Numerical_Partitioning@ADCValue,w
  1357     00C2  00F2               	movwf	___lwmod@dividend
  1358     00C3  3064               	movlw	100
  1359     00C4  00F0               	movwf	___lwmod@divisor
  1360     00C5  3000               	movlw	0
  1361     00C6  00F1               	movwf	___lwmod@divisor+1
  1362     00C7  3181  21A5  3180   	fcall	___lwmod
  1363     00CA  0871               	movf	?___lwmod+1,w
  1364     00CB  00F9               	movwf	___lwdiv@dividend+1
  1365     00CC  0870               	movf	?___lwmod,w
  1366     00CD  00F8               	movwf	___lwdiv@dividend
  1367     00CE  3181  2169  3180   	fcall	___lwdiv
  1368     00D1  0876               	movf	?___lwdiv,w
  1369     00D2  0020               	movlb	0	; select bank0
  1370     00D3  00AE               	movwf	_Tenth
  1371                           
  1372                           ;main.c: 113:  Unit = ADCValue % 10;
  1373     00D4  300A               	movlw	10
  1374     00D5  00F0               	movwf	___lwmod@divisor
  1375     00D6  3000               	movlw	0
  1376     00D7  00F1               	movwf	___lwmod@divisor+1
  1377     00D8  0832               	movf	Numerical_Partitioning@ADCValue+1,w
  1378     00D9  00F3               	movwf	___lwmod@dividend+1
  1379     00DA  0831               	movf	Numerical_Partitioning@ADCValue,w
  1380     00DB  00F2               	movwf	___lwmod@dividend
  1381     00DC  3181  21A5  3180   	fcall	___lwmod
  1382     00DF  0870               	movf	?___lwmod,w
  1383     00E0  0020               	movlb	0	; select bank0
  1384     00E1  00AD               	movwf	_Unit
  1385     00E2                     l83:
  1386     00E2  0008               	return
  1387     00E3                     __end_of_Numerical_Partitioning:
  1388                           
  1389                           	psect	text7
  1390     01A5                     __ptext7:	
  1391 ;; *************** function ___lwmod *****************
  1392 ;; Defined at:
  1393 ;;		line 5 in file "C:\XC8\pic\sources\c99\common\lwmod.c"
  1394 ;; Parameters:    Size  Location     Type
  1395 ;;  divisor         2    0[COMMON] unsigned int 
  1396 ;;  dividend        2    2[COMMON] unsigned int 
  1397 ;; Auto vars:     Size  Location     Type
  1398 ;;  counter         1    5[COMMON] unsigned char 
  1399 ;; Return value:  Size  Location     Type
  1400 ;;                  2    0[COMMON] unsigned int 
  1401 ;; Registers used:
  1402 ;;		wreg, status,2, status,0
  1403 ;; Tracked objects:
  1404 ;;		On entry : 0/0
  1405 ;;		On exit  : 0/0
  1406 ;;		Unchanged: 0/0
  1407 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1408 ;;      Params:         4       0       0       0
  1409 ;;      Locals:         1       0       0       0
  1410 ;;      Temps:          1       0       0       0
  1411 ;;      Totals:         6       0       0       0
  1412 ;;Total ram usage:        6 bytes
  1413 ;; Hardware stack levels used: 1
  1414 ;; Hardware stack levels required when called: 1
  1415 ;; This function calls:
  1416 ;;		Nothing
  1417 ;; This function is called by:
  1418 ;;		_Numerical_Partitioning
  1419 ;; This function uses a non-reentrant model
  1420 ;;
  1421                           
  1422     01A5                     ___lwmod:	
  1423                           ;psect for function ___lwmod
  1424                           
  1425     01A5                     l946:	
  1426                           ;incstack = 0
  1427                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  1428                           
  1429     01A5  0870               	movf	___lwmod@divisor,w
  1430     01A6  0471               	iorwf	___lwmod@divisor+1,w
  1431     01A7  1903               	btfsc	3,2
  1432     01A8  29AA               	goto	u311
  1433     01A9  29AB               	goto	u310
  1434     01AA                     u311:
  1435     01AA  29D4               	goto	l964
  1436     01AB                     u310:
  1437     01AB                     l948:
  1438     01AB  01F5               	clrf	___lwmod@counter
  1439     01AC  0AF5               	incf	___lwmod@counter,f
  1440     01AD  29B7               	goto	l954
  1441     01AE                     l950:
  1442     01AE  3001               	movlw	1
  1443     01AF                     u325:
  1444     01AF  35F0               	lslf	___lwmod@divisor,f
  1445     01B0  0DF1               	rlf	___lwmod@divisor+1,f
  1446     01B1  0B89               	decfsz	9,f
  1447     01B2  29AF               	goto	u325
  1448     01B3                     l952:
  1449     01B3  3001               	movlw	1
  1450     01B4  00F4               	movwf	??___lwmod
  1451     01B5  0874               	movf	??___lwmod,w
  1452     01B6  07F5               	addwf	___lwmod@counter,f
  1453     01B7                     l954:
  1454     01B7  1FF1               	btfss	___lwmod@divisor+1,7
  1455     01B8  29BA               	goto	u331
  1456     01B9  29BB               	goto	u330
  1457     01BA                     u331:
  1458     01BA  29AE               	goto	l950
  1459     01BB                     u330:
  1460     01BB                     l956:
  1461     01BB  0871               	movf	___lwmod@divisor+1,w
  1462     01BC  0273               	subwf	___lwmod@dividend+1,w
  1463     01BD  1D03               	skipz
  1464     01BE  29C1               	goto	u345
  1465     01BF  0870               	movf	___lwmod@divisor,w
  1466     01C0  0272               	subwf	___lwmod@dividend,w
  1467     01C1                     u345:
  1468     01C1  1C03               	skipc
  1469     01C2  29C4               	goto	u341
  1470     01C3  29C5               	goto	u340
  1471     01C4                     u341:
  1472     01C4  29C9               	goto	l960
  1473     01C5                     u340:
  1474     01C5                     l958:
  1475     01C5  0870               	movf	___lwmod@divisor,w
  1476     01C6  02F2               	subwf	___lwmod@dividend,f
  1477     01C7  0871               	movf	___lwmod@divisor+1,w
  1478     01C8  3BF3               	subwfb	___lwmod@dividend+1,f
  1479     01C9                     l960:
  1480     01C9  3001               	movlw	1
  1481     01CA                     u355:
  1482     01CA  36F1               	lsrf	___lwmod@divisor+1,f
  1483     01CB  0CF0               	rrf	___lwmod@divisor,f
  1484     01CC  0B89               	decfsz	9,f
  1485     01CD  29CA               	goto	u355
  1486     01CE                     l962:
  1487     01CE  3001               	movlw	1
  1488     01CF  02F5               	subwf	___lwmod@counter,f
  1489     01D0  1D03               	btfss	3,2
  1490     01D1  29D3               	goto	u361
  1491     01D2  29D4               	goto	u360
  1492     01D3                     u361:
  1493     01D3  29BB               	goto	l956
  1494     01D4                     u360:
  1495     01D4                     l964:
  1496     01D4  0873               	movf	___lwmod@dividend+1,w
  1497     01D5  00F1               	movwf	?___lwmod+1
  1498     01D6  0872               	movf	___lwmod@dividend,w
  1499     01D7  00F0               	movwf	?___lwmod
  1500     01D8                     l554:
  1501     01D8  0008               	return
  1502     01D9                     __end_of___lwmod:
  1503                           
  1504                           	psect	text8
  1505     00E3                     __ptext8:	
  1506 ;; *************** function _ADsensing *****************
  1507 ;; Defined at:
  1508 ;;		line 36 in file "main.c"
  1509 ;; Parameters:    Size  Location     Type
  1510 ;;		None
  1511 ;; Auto vars:     Size  Location     Type
  1512 ;;		None
  1513 ;; Return value:  Size  Location     Type
  1514 ;;                  1    wreg      void 
  1515 ;; Registers used:
  1516 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1517 ;; Tracked objects:
  1518 ;;		On entry : 0/0
  1519 ;;		On exit  : 0/0
  1520 ;;		Unchanged: 0/0
  1521 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1522 ;;      Params:         0       0       0       0
  1523 ;;      Locals:         0       0       0       0
  1524 ;;      Temps:          0       6       0       0
  1525 ;;      Totals:         0       6       0       0
  1526 ;;Total ram usage:        6 bytes
  1527 ;; Hardware stack levels used: 1
  1528 ;; Hardware stack levels required when called: 2
  1529 ;; This function calls:
  1530 ;;		___lwdiv
  1531 ;;		_getADCValue
  1532 ;; This function is called by:
  1533 ;;		_main
  1534 ;; This function uses a non-reentrant model
  1535 ;;
  1536                           
  1537     00E3                     _ADsensing:	
  1538                           ;psect for function _ADsensing
  1539                           
  1540     00E3                     l986:	
  1541                           ;incstack = 0
  1542                           ; Regs used in _ADsensing: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1543                           
  1544                           
  1545                           ;main.c: 38:  if(ADSValue < 5)
  1546     00E3  3005               	movlw	5
  1547     00E4  0020               	movlb	0	; select bank0
  1548     00E5  022C               	subwf	_ADSValue,w
  1549     00E6  1803               	skipnc
  1550     00E7  28E9               	goto	u371
  1551     00E8  28EA               	goto	u370
  1552     00E9                     u371:
  1553     00E9  28FC               	goto	l992
  1554     00EA                     u370:
  1555     00EA                     l988:
  1556                           
  1557                           ;main.c: 39:  {;main.c: 40:   AD[ADSValue] = getADCValue(0x03);
  1558     00EA  3003               	movlw	3
  1559     00EB  3181  21D9  3180   	fcall	_getADCValue
  1560     00EE  0020               	movlb	0	; select bank0
  1561     00EF  352C               	lslf	_ADSValue,w
  1562     00F0  3E20               	addlw	(low (_AD| 0))& (0+255)
  1563     00F1  0086               	movwf	6
  1564     00F2  0187               	clrf	7
  1565     00F3  0870               	movf	?_getADCValue,w
  1566     00F4  3FC0               	movwi [0]fsr1
  1567     00F5  0871               	movf	?_getADCValue+1,w
  1568     00F6  3FC1               	movwi [1]fsr1
  1569     00F7                     l990:
  1570                           
  1571                           ;main.c: 41:   ADSValue++;
  1572     00F7  3001               	movlw	1
  1573     00F8  00B1               	movwf	??_ADsensing
  1574     00F9  0831               	movf	??_ADsensing,w
  1575     00FA  07AC               	addwf	_ADSValue,f
  1576                           
  1577                           ;main.c: 42:  }
  1578     00FB  2929               	goto	l63
  1579     00FC                     l992:
  1580                           
  1581                           ;main.c: 44:  {;main.c: 45:   ADValue = (AD[0] + AD[1] + AD[2] + AD[3] + AD[4]) / 5;
  1582     00FC  3005               	movlw	5
  1583     00FD  00F6               	movwf	___lwdiv@divisor
  1584     00FE  3000               	movlw	0
  1585     00FF  00F7               	movwf	___lwdiv@divisor+1
  1586     0100  3008               	movlw	8
  1587     0101  3E20               	addlw	(low (_AD| 0))& (0+255)
  1588     0102  0086               	movwf	6
  1589     0103  0187               	clrf	7
  1590     0104  3006               	movlw	6
  1591     0105  3E20               	addlw	(low (_AD| 0))& (0+255)
  1592     0106  0084               	movwf	4
  1593     0107  0185               	clrf	5
  1594     0108  0824               	movf	_AD+4,w
  1595     0109  0722               	addwf	_AD+2,w
  1596     010A  00B1               	movwf	??_ADsensing
  1597     010B  0825               	movf	_AD+5,w
  1598     010C  3D23               	addwfc	_AD+3,w
  1599     010D  00B2               	movwf	??_ADsensing+1
  1600     010E  3F00               	moviw [0]fsr0
  1601     010F  0731               	addwf	??_ADsensing,w
  1602     0110  00B3               	movwf	??_ADsensing+2
  1603     0111  3F01               	moviw [1]fsr0
  1604     0112  3D32               	addwfc	??_ADsensing+1,w
  1605     0113  00B4               	movwf	??_ADsensing+3
  1606     0114  3F40               	moviw [0]fsr1
  1607     0115  0733               	addwf	??_ADsensing+2,w
  1608     0116  00B5               	movwf	??_ADsensing+4
  1609     0117  3F41               	moviw [1]fsr1
  1610     0118  3D34               	addwfc	??_ADsensing+3,w
  1611     0119  00B6               	movwf	??_ADsensing+5
  1612     011A  0820               	movf	_AD,w
  1613     011B  0735               	addwf	??_ADsensing+4,w
  1614     011C  00F8               	movwf	___lwdiv@dividend
  1615     011D  0821               	movf	_AD+1,w
  1616     011E  3D36               	addwfc	??_ADsensing+5,w
  1617     011F  00F9               	movwf	___lwdiv@dividend+1
  1618     0120  3181  2169  3180   	fcall	___lwdiv
  1619     0123  0877               	movf	?___lwdiv+1,w
  1620     0124  0020               	movlb	0	; select bank0
  1621     0125  00AB               	movwf	_ADValue+1
  1622     0126  0876               	movf	?___lwdiv,w
  1623     0127  00AA               	movwf	_ADValue
  1624     0128                     l994:
  1625                           
  1626                           ;main.c: 46:   ADSValue = 0;
  1627     0128  01AC               	clrf	_ADSValue
  1628     0129                     l63:
  1629     0129  0008               	return
  1630     012A                     __end_of_ADsensing:
  1631                           
  1632                           	psect	text9
  1633     01D9                     __ptext9:	
  1634 ;; *************** function _getADCValue *****************
  1635 ;; Defined at:
  1636 ;;		line 27 in file "main.c"
  1637 ;; Parameters:    Size  Location     Type
  1638 ;;  channel         1    wreg     unsigned char 
  1639 ;; Auto vars:     Size  Location     Type
  1640 ;;  channel         1    9[COMMON] unsigned char 
  1641 ;; Return value:  Size  Location     Type
  1642 ;;                  2    0[COMMON] unsigned int 
  1643 ;; Registers used:
  1644 ;;		wreg, status,2, status,0
  1645 ;; Tracked objects:
  1646 ;;		On entry : 0/0
  1647 ;;		On exit  : 0/0
  1648 ;;		Unchanged: 0/0
  1649 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1650 ;;      Params:         2       0       0       0
  1651 ;;      Locals:         1       0       0       0
  1652 ;;      Temps:          7       0       0       0
  1653 ;;      Totals:        10       0       0       0
  1654 ;;Total ram usage:       10 bytes
  1655 ;; Hardware stack levels used: 1
  1656 ;; Hardware stack levels required when called: 1
  1657 ;; This function calls:
  1658 ;;		Nothing
  1659 ;; This function is called by:
  1660 ;;		_ADsensing
  1661 ;; This function uses a non-reentrant model
  1662 ;;
  1663                           
  1664     01D9                     _getADCValue:	
  1665                           ;psect for function _getADCValue
  1666                           
  1667                           
  1668                           ;incstack = 0
  1669                           ; Regs used in _getADCValue: [wreg+status,2+status,0]
  1670                           ;getADCValue@channel stored from wreg
  1671     01D9  00F9               	movwf	getADCValue@channel
  1672     01DA                     l902:
  1673                           
  1674                           ;main.c: 27: unsigned int getADCValue(unsigned char channel);main.c: 28: {;main.c: 29:  
      +                             ADCON0bits.CHS = channel;
  1675     01DA  0879               	movf	getADCValue@channel,w
  1676     01DB  00F2               	movwf	??_getADCValue
  1677     01DC  0DF2               	rlf	??_getADCValue,f
  1678     01DD  0DF2               	rlf	??_getADCValue,f
  1679     01DE  0021               	movlb	1	; select bank1
  1680     01DF  081D               	movf	29,w	;volatile
  1681     01E0  0672               	xorwf	??_getADCValue,w
  1682     01E1  3983               	andlw	-125
  1683     01E2  0672               	xorwf	??_getADCValue,w
  1684     01E3  009D               	movwf	29	;volatile
  1685     01E4                     l904:
  1686                           
  1687                           ;main.c: 30:     _delay((unsigned long)((5)*(32000000/4000.0)));
  1688     01E4  3034               	movlw	52
  1689     01E5  00F2               	movwf	??_getADCValue
  1690     01E6  30F2               	movlw	242
  1691     01E7                     u497:
  1692     01E7  0B89               	decfsz	9,f
  1693     01E8  29E7               	goto	u497
  1694     01E9  0BF2               	decfsz	??_getADCValue,f
  1695     01EA  29E7               	goto	u497
  1696     01EB                     l906:
  1697                           
  1698                           ;main.c: 31:     ADCON0bits.GO = 1;
  1699     01EB  0021               	movlb	1	; select bank1
  1700     01EC  149D               	bsf	29,1	;volatile
  1701     01ED                     l55:	
  1702                           ;main.c: 32:     while (ADCON0bits.GO);
  1703                           
  1704     01ED  189D               	btfsc	29,1	;volatile
  1705     01EE  29F0               	goto	u221
  1706     01EF  29F1               	goto	u220
  1707     01F0                     u221:
  1708     01F0  29ED               	goto	l55
  1709     01F1                     u220:
  1710     01F1                     l908:
  1711                           
  1712                           ;main.c: 33:     return (unsigned int)((ADRESH << 2) | (ADRESL >> 6));
  1713     01F1  081B               	movf	27,w	;volatile
  1714     01F2  00F2               	movwf	??_getADCValue
  1715     01F3  3006               	movlw	6
  1716     01F4                     u235:
  1717     01F4  36F2               	lsrf	??_getADCValue,f
  1718     01F5  0B89               	decfsz	9,f
  1719     01F6  29F4               	goto	u235
  1720     01F7  0872               	movf	??_getADCValue,w
  1721     01F8  00F3               	movwf	??_getADCValue+1
  1722     01F9  01F4               	clrf	??_getADCValue+2
  1723     01FA  081C               	movf	28,w	;volatile
  1724     01FB  00F5               	movwf	??_getADCValue+3
  1725     01FC  01F6               	clrf	??_getADCValue+4
  1726     01FD  35F5               	lslf	??_getADCValue+3,f
  1727     01FE  0DF6               	rlf	??_getADCValue+4,f
  1728     01FF  35F5               	lslf	??_getADCValue+3,f
  1729     0200  0DF6               	rlf	??_getADCValue+4,f
  1730     0201  0873               	movf	??_getADCValue+1,w
  1731     0202  0475               	iorwf	??_getADCValue+3,w
  1732     0203  00F7               	movwf	??_getADCValue+5
  1733     0204  0874               	movf	??_getADCValue+2,w
  1734     0205  0476               	iorwf	??_getADCValue+4,w
  1735     0206  00F8               	movwf	??_getADCValue+6
  1736     0207  0877               	movf	??_getADCValue+5,w
  1737     0208  00F0               	movwf	?_getADCValue
  1738     0209  0878               	movf	??_getADCValue+6,w
  1739     020A  00F1               	movwf	?_getADCValue+1
  1740     020B                     l58:
  1741     020B  0008               	return
  1742     020C                     __end_of_getADCValue:
  1743                           
  1744                           	psect	text10
  1745     0169                     __ptext10:	
  1746 ;; *************** function ___lwdiv *****************
  1747 ;; Defined at:
  1748 ;;		line 5 in file "C:\XC8\pic\sources\c99\common\lwdiv.c"
  1749 ;; Parameters:    Size  Location     Type
  1750 ;;  divisor         2    6[COMMON] unsigned int 
  1751 ;;  dividend        2    8[COMMON] unsigned int 
  1752 ;; Auto vars:     Size  Location     Type
  1753 ;;  quotient        2   11[COMMON] unsigned int 
  1754 ;;  counter         1   13[COMMON] unsigned char 
  1755 ;; Return value:  Size  Location     Type
  1756 ;;                  2    6[COMMON] unsigned int 
  1757 ;; Registers used:
  1758 ;;		wreg, status,2, status,0
  1759 ;; Tracked objects:
  1760 ;;		On entry : 0/0
  1761 ;;		On exit  : 0/0
  1762 ;;		Unchanged: 0/0
  1763 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1764 ;;      Params:         4       0       0       0
  1765 ;;      Locals:         3       0       0       0
  1766 ;;      Temps:          1       0       0       0
  1767 ;;      Totals:         8       0       0       0
  1768 ;;Total ram usage:        8 bytes
  1769 ;; Hardware stack levels used: 1
  1770 ;; Hardware stack levels required when called: 1
  1771 ;; This function calls:
  1772 ;;		Nothing
  1773 ;; This function is called by:
  1774 ;;		_ADsensing
  1775 ;;		_Numerical_Partitioning
  1776 ;; This function uses a non-reentrant model
  1777 ;;
  1778                           
  1779     0169                     ___lwdiv:	
  1780                           ;psect for function ___lwdiv
  1781                           
  1782     0169                     l920:	
  1783                           ;incstack = 0
  1784                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  1785                           
  1786     0169  01FB               	clrf	___lwdiv@quotient
  1787     016A  01FC               	clrf	___lwdiv@quotient+1
  1788     016B                     l922:
  1789     016B  0876               	movf	___lwdiv@divisor,w
  1790     016C  0477               	iorwf	___lwdiv@divisor+1,w
  1791     016D  1903               	btfsc	3,2
  1792     016E  2970               	goto	u241
  1793     016F  2971               	goto	u240
  1794     0170                     u241:
  1795     0170  29A0               	goto	l942
  1796     0171                     u240:
  1797     0171                     l924:
  1798     0171  01FD               	clrf	___lwdiv@counter
  1799     0172  0AFD               	incf	___lwdiv@counter,f
  1800     0173  297D               	goto	l930
  1801     0174                     l926:
  1802     0174  3001               	movlw	1
  1803     0175                     u255:
  1804     0175  35F6               	lslf	___lwdiv@divisor,f
  1805     0176  0DF7               	rlf	___lwdiv@divisor+1,f
  1806     0177  0B89               	decfsz	9,f
  1807     0178  2975               	goto	u255
  1808     0179                     l928:
  1809     0179  3001               	movlw	1
  1810     017A  00FA               	movwf	??___lwdiv
  1811     017B  087A               	movf	??___lwdiv,w
  1812     017C  07FD               	addwf	___lwdiv@counter,f
  1813     017D                     l930:
  1814     017D  1FF7               	btfss	___lwdiv@divisor+1,7
  1815     017E  2980               	goto	u261
  1816     017F  2981               	goto	u260
  1817     0180                     u261:
  1818     0180  2974               	goto	l926
  1819     0181                     u260:
  1820     0181                     l932:
  1821     0181  3001               	movlw	1
  1822     0182                     u275:
  1823     0182  35FB               	lslf	___lwdiv@quotient,f
  1824     0183  0DFC               	rlf	___lwdiv@quotient+1,f
  1825     0184  0B89               	decfsz	9,f
  1826     0185  2982               	goto	u275
  1827     0186  0877               	movf	___lwdiv@divisor+1,w
  1828     0187  0279               	subwf	___lwdiv@dividend+1,w
  1829     0188  1D03               	skipz
  1830     0189  298C               	goto	u285
  1831     018A  0876               	movf	___lwdiv@divisor,w
  1832     018B  0278               	subwf	___lwdiv@dividend,w
  1833     018C                     u285:
  1834     018C  1C03               	skipc
  1835     018D  298F               	goto	u281
  1836     018E  2990               	goto	u280
  1837     018F                     u281:
  1838     018F  2995               	goto	l938
  1839     0190                     u280:
  1840     0190                     l934:
  1841     0190  0876               	movf	___lwdiv@divisor,w
  1842     0191  02F8               	subwf	___lwdiv@dividend,f
  1843     0192  0877               	movf	___lwdiv@divisor+1,w
  1844     0193  3BF9               	subwfb	___lwdiv@dividend+1,f
  1845     0194                     l936:
  1846     0194  147B               	bsf	___lwdiv@quotient,0
  1847     0195                     l938:
  1848     0195  3001               	movlw	1
  1849     0196                     u295:
  1850     0196  36F7               	lsrf	___lwdiv@divisor+1,f
  1851     0197  0CF6               	rrf	___lwdiv@divisor,f
  1852     0198  0B89               	decfsz	9,f
  1853     0199  2996               	goto	u295
  1854     019A                     l940:
  1855     019A  3001               	movlw	1
  1856     019B  02FD               	subwf	___lwdiv@counter,f
  1857     019C  1D03               	btfss	3,2
  1858     019D  299F               	goto	u301
  1859     019E  29A0               	goto	u300
  1860     019F                     u301:
  1861     019F  2981               	goto	l932
  1862     01A0                     u300:
  1863     01A0                     l942:
  1864     01A0  087C               	movf	___lwdiv@quotient+1,w
  1865     01A1  00F7               	movwf	?___lwdiv+1
  1866     01A2  087B               	movf	___lwdiv@quotient,w
  1867     01A3  00F6               	movwf	?___lwdiv
  1868     01A4                     l544:
  1869     01A4  0008               	return
  1870     01A5                     __end_of___lwdiv:
  1871                           
  1872                           	psect	intentry
  1873     0004                     __pintentry:	
  1874 ;; *************** function _ISR *****************
  1875 ;; Defined at:
  1876 ;;		line 50 in file "main.c"
  1877 ;; Parameters:    Size  Location     Type
  1878 ;;		None
  1879 ;; Auto vars:     Size  Location     Type
  1880 ;;		None
  1881 ;; Return value:  Size  Location     Type
  1882 ;;                  1    wreg      void 
  1883 ;; Registers used:
  1884 ;;		None
  1885 ;; Tracked objects:
  1886 ;;		On entry : 0/0
  1887 ;;		On exit  : 0/0
  1888 ;;		Unchanged: 0/0
  1889 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1890 ;;      Params:         0       0       0       0
  1891 ;;      Locals:         0       0       0       0
  1892 ;;      Temps:          0       0       0       0
  1893 ;;      Totals:         0       0       0       0
  1894 ;;Total ram usage:        0 bytes
  1895 ;; Hardware stack levels used: 1
  1896 ;; This function calls:
  1897 ;;		Nothing
  1898 ;; This function is called by:
  1899 ;;		Interrupt level 1
  1900 ;; This function uses a non-reentrant model
  1901 ;;
  1902                           
  1903     0004                     _ISR:
  1904                           
  1905                           ;incstack = 0
  1906     0004  147E               	bsf	int$flags,0	;set compiler interrupt flag (level 1)
  1907                           
  1908                           ; Regs used in _ISR: []
  1909     0005  3180               	pagesel	$
  1910     0006                     i1l880:
  1911                           
  1912                           ;main.c: 52:  if(PIR1bits.ADIF == 1)
  1913     0006  0020               	movlb	0	; select bank0
  1914     0007  1F11               	btfss	17,6	;volatile
  1915     0008  280A               	goto	u19_21
  1916     0009  280B               	goto	u19_20
  1917     000A                     u19_21:
  1918     000A  2811               	goto	i1l69
  1919     000B                     u19_20:
  1920     000B                     i1l882:
  1921                           
  1922                           ;main.c: 53:  {;main.c: 54:   PIE1bits.ADIE = 0;
  1923     000B  0021               	movlb	1	; select bank1
  1924     000C  1311               	bcf	17,6	;volatile
  1925                           
  1926                           ;main.c: 55:   PIR1bits.ADIF = 0;
  1927     000D  0020               	movlb	0	; select bank0
  1928     000E  1311               	bcf	17,6	;volatile
  1929                           
  1930                           ;main.c: 57:   PIE1bits.ADIE = 1;
  1931     000F  0021               	movlb	1	; select bank1
  1932     0010  1711               	bsf	17,6	;volatile
  1933     0011                     i1l69:
  1934     0011  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  1935     0012  0009               	retfie
  1936     0013                     __end_of_ISR:
  1937     007E                     btemp	set	126	;btemp
  1938     007E                     int$flags	set	126
  1939     007E                     wtemp0	set	126
  1940                           
  1941                           	psect	config
  1942                           
  1943                           ;Config register CONFIG1 @ 0x8007
  1944                           ;	Oscillator Selection
  1945                           ;	FOSC = INTOSC, INTOSC oscillator: I/O function on CLKIN pin
  1946                           ;	Watchdog Timer Enable
  1947                           ;	WDTE = OFF, WDT disabled
  1948                           ;	Power-up Timer Enable
  1949                           ;	PWRTE = OFF, PWRT disabled
  1950                           ;	MCLR Pin Function Select
  1951                           ;	MCLRE = ON, MCLR/VPP pin function is MCLR
  1952                           ;	Flash Program Memory Code Protection
  1953                           ;	CP = OFF, Program memory code protection is disabled
  1954                           ;	Data Memory Code Protection
  1955                           ;	CPD = OFF, Data memory code protection is disabled
  1956                           ;	Brown-out Reset Enable
  1957                           ;	BOREN = ON, Brown-out Reset enabled
  1958                           ;	Clock Out Enable
  1959                           ;	CLKOUTEN = OFF, CLKOUT function is disabled. I/O or oscillator function on the CLKOUT 
      +                          pin
  1960                           ;	Internal/External Switchover
  1961                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  1962                           ;	Fail-Safe Clock Monitor Enable
  1963                           ;	FCMEN = ON, Fail-Safe Clock Monitor is enabled
  1964     8007                     	org	32775
  1965     8007  2FE4               	dw	12260
  1966                           
  1967                           ;Config register CONFIG2 @ 0x8008
  1968                           ;	Flash Memory Self-Write Protection
  1969                           ;	WRT = OFF, Write protection off
  1970                           ;	PLL Enable
  1971                           ;	PLLEN = ON, 4x PLL enabled
  1972                           ;	Stack Overflow/Underflow Reset Enable
  1973                           ;	STVREN = ON, Stack Overflow or Underflow will cause a Reset
  1974                           ;	Brown-out Reset Voltage Selection
  1975                           ;	BORV = LO, Brown-out Reset Voltage (Vbor), low trip point selected.
  1976                           ;	In-Circuit Debugger Mode
  1977                           ;	DEBUG = OFF, In-Circuit Debugger disabled, ICSPCLK and ICSPDAT are general purpose I/O
      +                           pins
  1978                           ;	Low-Voltage Programming Enable
  1979                           ;	LVP = OFF, High-voltage on MCLR/VPP must be used for programming
  1980     8008                     	org	32776
  1981     8008  1FFF               	dw	8191

Data Sizes:
    Strings     0
    Constant    10
    Data        0
    BSS         17
    Persistent  32
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80      8      25
    BANK1            80      0       0
    BANK2            80      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _TM1620_Dis->_TM1620Sencmd
    _TM1620Sencmd->_TM1620Sendata
    _Numerical_Partitioning->___lwdiv
    _ADsensing->___lwdiv
    ___lwdiv->___lwmod

Critical Paths under _ISR in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_ADsensing

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0    2543
                                              6 BANK0      2     2      0
                          _ADsensing
             _Numerical_Partitioning
                    _PIC12F1840_Init
                         _TM1620_Dis
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _TM1620_Dis                                           1     1      0     202
                                              6 COMMON     1     1      0
                       _TM1620Sencmd
                      _TM1620Sendata
 ---------------------------------------------------------------------------------
 (2) _TM1620Sencmd                                         2     2      0     112
                                              4 COMMON     2     2      0
                      _TM1620Sendata
 ---------------------------------------------------------------------------------
 (2) _TM1620Sendata                                        4     4      0      90
                                              0 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 (1) _PIC12F1840_Init                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Numerical_Partitioning                               2     0      2    1549
                                              0 BANK0      2     0      2
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              6     2      4     615
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (1) _ADsensing                                            6     6      0     792
                                              0 BANK0      6     6      0
                            ___lwdiv
                        _getADCValue
 ---------------------------------------------------------------------------------
 (2) _getADCValue                                         10     8      2      22
                                              0 COMMON    10     8      2
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4     770
                                              6 COMMON     8     4      4
                            ___lwmod (ARG)
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _ISR                                                  0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADsensing
     ___lwdiv
       ___lwmod (ARG)
     _getADCValue
   _Numerical_Partitioning
     ___lwdiv
     ___lwmod
   _PIC12F1840_Init
   _TM1620_Dis
     _TM1620Sencmd
       _TM1620Sendata
     _TM1620Sendata
   _setup

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM              F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      27       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50      8      19       6       31.2%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
DATA                 0      0      27      11        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.45 build 20230818022343 
Symbol Table                                                                                   Tue Dec 12 17:33:07 2023

                   ?_TM1620_Dis 0070                   ?_TM1620Sencmd 0070                              _AD 0020  
                            l55 01ED                              l63 0129                              l80 0249  
                            l72 0092                              l58 020B                              l83 00E2  
                            l75 020E                              l77 022F                  ?_TM1620Sendata 0070  
                           l111 025A                             l108 0267                             l544 01A4  
                           l554 01D8                             l900 0225                             l902 01DA  
                           l920 0169                             l904 01E4                             l912 0231  
                           l930 017D                             l922 016B                             l906 01EB  
                           l914 0233                             l940 019A                             l932 0181  
                           l924 0171                             l908 01F1                             l916 023B  
                           l934 0190                             l926 0174                             l942 01A0  
                           l950 01AE                             l918 0245                             l936 0194  
                           l928 0179                             l960 01C9                             l952 01B3  
                           l938 0195                             l962 01CE                             l954 01B7  
                           l946 01A5                             l970 024A                             l956 01BB  
                           l948 01AB                             l964 01D4                             l980 0255  
                           l972 024D                             l990 00F7                             l958 01C5  
                           l894 0210                             l982 0257                             l974 0252  
                           l992 00FC                             l968 025B                             l896 0221  
                           l888 020D                             l984 0259                             l976 0253  
                           l994 0128                             l986 00E3                             l898 0222  
                           l978 0254                             l988 00EA                             l996 0093  
                           l998 0021                             u210 022F                             u211 022E  
                           u300 01A0                             u220 01F1                             u204 0215  
                           u301 019F                             u221 01F0                             u205 0214  
                           u310 01AB                             u311 01AA                             u240 0171  
                           u241 0170                             u330 01BB                             u235 01F4  
                           u331 01BA                             u260 0181                             u340 01C5  
                           u261 0180                             u341 01C4                             u325 01AF  
                           u255 0175                             u407 0155                             u280 0190  
                           u360 01D4                             u281 018F                             u361 01D3  
                           u345 01C1                             u417 0161                             u370 00EA  
                           u275 0182                             u371 00E9                             u355 01CA  
                           u427 002E                             _ISR 0004                             u285 018C  
                           u437 0074                             u295 0196                             u447 007D  
                           u457 0087                             u467 0236                             u387 0136  
                           u477 0240                             u397 0144                             u487 0223  
                           u497 01E7                             wreg 0009                            ?_ISR 0070  
                          l1000 002D                            l1010 0051                            l1002 0031  
                          l1020 0078                            l1012 005D                            l1004 003D  
                          l1022 007A                            l1014 0061                            l1006 0041  
                          l1030 012A                            l1024 0082                            l1016 006D  
                          l1008 004D                            l1040 0151                            l1032 012D  
                          l1026 0084                            l1018 0071                            l1042 015A  
                          l1034 013D                            l1028 0090                            l1044 015D  
                          l1036 0140                            l1038 0149                            _CODE 0268  
                          i1l69 0011                            _Unit 002D                            _main 012A  
                          fsr0h 0005                            fsr1h 0007                            indf0 0000  
                          fsr0l 0004                            fsr1l 0006                            btemp 007E  
                          start 0013                  ??_TM1620Sencmd 0074                           ??_ISR 0070  
                         ?_main 0070                 __end_of___lwdiv 01A5                 __end_of___lwmod 01D9  
                         i1l880 0006                           i1l882 000B                           u19_20 000B  
                         u19_21 000A                           _Tenth 002E                 _PIC12F1840_Init 025B  
                         _setup 024A        ??_Numerical_Partitioning 007E                           status 0003  
                         wtemp0 007E                    __end_of_CODE 0272                 __initialization 0015  
                  __end_of_main 0169                 ??_TM1620Sendata 0070                          ??_main 0037  
                        _ADCON1 009E                          _ADRESH 009C                          _ADRESL 009B  
                        ?_setup 0070               __end_of_ADsensing 012A                          _OSCCON 0099  
                     ??___lwdiv 007A                       ??___lwmod 0074         __end_of_PIC12F1840_Init 0268  
                    _Thousandth 0030            __end_of_TM1620Sencmd 024A         __end_of__initialization 001D  
            getADCValue@channel 0079                    ??_TM1620_Dis 0076                  __pcstackCOMMON 0070  
                 __end_of_setup 025B                         ??_setup 0070              __end_of_TM1620_Dis 0093  
                    __pbssBANK0 0020                      __pmaintext 012A                      __pintentry 0004  
        _Numerical_Partitioning 0093                ?_PIC12F1840_Init 0070                         _ADValue 002A  
                TM1620Sendata@i 0073                   ??_getADCValue 0072                         ___lwdiv 0169  
                       ___lwmod 01A5                         __ptext1 024A                         __ptext2 0021  
                       __ptext3 0230                         __ptext4 020C                         __ptext5 025B  
                       __ptext6 0093                         __ptext7 01A5                         __ptext8 00E3  
                       __ptext9 01D9                         clrloop0 0273            end_of_initialization 001D  
                     _ADsensing 00E3                    _TM1620Sencmd 0230             __end_of_getADCValue 020C  
         __end_of_TM1620Sendata 0230                       _TRISAbits 008C                      ?_ADsensing 0070  
           start_initialization 0015                     __end_of_ISR 0013                       _Hundredth 002F  
                   _getADCValue 01D9         ?_Numerical_Partitioning 0031                       ___latbits 0001  
                 __pcstackBANK0 0031                     ??_ADsensing 0031                ___lwdiv@dividend 0078  
__end_of_Numerical_Partitioning 00E3                        ?___lwdiv 0076                        ?___lwmod 0070  
              ___lwdiv@quotient 007B                        _ADSValue 002C                        _LATAbits 010C  
                     clear_ram0 0272                        _PIE1bits 0091                 TM1620Sencmd@com 0075  
                      _PIR1bits 0011                      _ADCON0bits 009D         TM1620Sendata@TM1620Data 0072  
                    _ANSELAbits 018C                 ___lwdiv@divisor 0076                 ___lwdiv@counter 007D  
                      __ptext10 0169               ??_PIC12F1840_Init 0070                    ?_getADCValue 0070  
                    _TM1620_Dis 0021                        int$flags 007E                      _INTCONbits 000B  
                      intlevel1 0000                ___lwmod@dividend 0072                   __pstringtext1 0268  
                 _TM1620Sendata 020C                 ___lwmod@divisor 0070                 ___lwmod@counter 0075  
Numerical_Partitioning@ADCValue 0031  
